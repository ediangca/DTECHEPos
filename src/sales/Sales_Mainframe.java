/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sales;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.geom.RoundRectangle2D;
import java.io.StringReader;
import java.sql.*;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.html.HTMLEditorKit;

/**
 *
 * @author Administrator
 */
public class Sales_Mainframe extends javax.swing.JFrame {

    /**
     * Creates new form MAIN_EPOS
     */
    DefaultTableModel dtm;
    javax.swing.Timer datetimer, loadtimer;
    int load = 0;

    JDialog loginprompt;
    Sales_Mainframe sales_mainframe;
    Sales_ProductSearch sales_productsearch;
    Sales_Login sales_login;

    Connection connection = null;
    Statement statement;
    ResultSet result;

    boolean bulk_quantity = false;
    public String userID = "dtect", position = "tech-administrator", userFullname = "D-Tech Solutions", Company_No = "101";

    public Sales_Mainframe() {
        initComponents();
        this.sales_mainframe = this;

        setLocationRelativeTo(null);

        jScrollPane2.setViewportView(menu_inner);
        initDatetime();
        dtm = (DefaultTableModel) table_transaction.getModel();

        setCardViewportView("login");

    }

    private void initDatetime() {

        label_dateday.setText(new SimpleDateFormat("EEEE").format(new Date()).toUpperCase());

        datetimer = new javax.swing.Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                label_datetime.setText(new SimpleDateFormat("MMMM dd, yyyy hh:mm:ss a").format(new Date()));
            }
        });
        datetimer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menu_inner = new javax.swing.JMenuBar();
        REPORTS = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        card_panel = new javax.swing.JPanel();
        panel_login = new javax.swing.JPanel();
        label_loadingtext = new javax.swing.JProgressBar();
        label_loading = new javax.swing.JLabel();
        panel_sales = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        label_subtotal = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        texteditor_receipt = new javax.swing.JEditorPane();
        jPanel3 = new javax.swing.JPanel();
        label_dateday = new javax.swing.JLabel();
        label_datetime = new javax.swing.JLabel();
        but_add = new javax.swing.JButton();
        but_void = new javax.swing.JButton();
        but_cancel = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        label_userlog = new javax.swing.JLabel();
        but_logout = new javax.swing.JButton();
        but_search = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        dashboard_panel = new javax.swing.JPanel();
        panel_dashboard = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        panel_console = new javax.swing.JPanel();
        jEditorPane1 = new javax.swing.JEditorPane();
        panel_transaction = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_transaction = new javax.swing.JTable();
        but_sales1 = new javax.swing.JButton();
        but_sales2 = new javax.swing.JButton();
        field_barcode = new javax.swing.JFormattedTextField();
        menu_outer = new javax.swing.JMenuBar();
        Menufile = new javax.swing.JMenu();
        MenuItemlock = new javax.swing.JMenuItem();
        MenuItemlogout = new javax.swing.JMenuItem();
        MenuItemexit = new javax.swing.JMenuItem();
        Menuitem = new javax.swing.JMenu();
        MenuItemadd = new javax.swing.JMenuItem();
        MenuItemvoid = new javax.swing.JMenuItem();
        MenuItemcancel = new javax.swing.JMenuItem();
        MenuItemsearch = new javax.swing.JMenuItem();
        MenuItemmember = new javax.swing.JMenuItem();
        Menuoption = new javax.swing.JMenu();
        Menuitemoptquantity = new javax.swing.JMenuItem();

        REPORTS.setText("REPORTS");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("X-READ");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        REPORTS.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Z-READ");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        REPORTS.add(jMenuItem4);

        menu_inner.add(REPORTS);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SALE INVENTORY SYSTEM  BY D-TECH SOLUTIONS");

        card_panel.setBackground(new java.awt.Color(51, 51, 51));
        card_panel.setLayout(new java.awt.CardLayout());

        panel_login.setBackground(new java.awt.Color(255, 255, 255));

        label_loadingtext.setIndeterminate(true);
        label_loadingtext.setNextFocusableComponent(field_barcode);
        label_loadingtext.setRequestFocusEnabled(false);

        label_loading.setText("Loading Database . .");

        javax.swing.GroupLayout panel_loginLayout = new javax.swing.GroupLayout(panel_login);
        panel_login.setLayout(panel_loginLayout);
        panel_loginLayout.setHorizontalGroup(
            panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_loginLayout.createSequentialGroup()
                .addGap(318, 318, 318)
                .addGroup(panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_loadingtext, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                    .addComponent(label_loading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(317, 317, 317))
        );
        panel_loginLayout.setVerticalGroup(
            panel_loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_loginLayout.createSequentialGroup()
                .addContainerGap(220, Short.MAX_VALUE)
                .addComponent(label_loading)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_loadingtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(223, 223, 223))
        );

        card_panel.add(panel_login, "logincard");

        panel_sales.setNextFocusableComponent(field_barcode);
        panel_sales.setOpaque(false);

        jPanel4.setBackground(new java.awt.Color(204, 204, 0));
        jPanel4.setPreferredSize(new java.awt.Dimension(285, 238));

        jPanel2.setOpaque(false);

        jLabel6.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("TRANSACTION");
        jLabel6.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel9.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("DISCOUNT");

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 204, 0));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("0.00");
        jLabel12.setOpaque(true);

        label_subtotal.setBackground(new java.awt.Color(0, 0, 0));
        label_subtotal.setFont(new java.awt.Font("sansserif", 1, 32)); // NOI18N
        label_subtotal.setForeground(new java.awt.Color(204, 204, 0));
        label_subtotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_subtotal.setText("0.00");
        label_subtotal.setToolTipText(label_subtotal.getText());
        label_subtotal.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SUBTOTAL", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 1, 18), new java.awt.Color(255, 255, 255))); // NOI18N
        label_subtotal.setOpaque(true);
        label_subtotal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                label_subtotalFocusGained(evt);
            }
        });

        texteditor_receipt.setEditable(false);
        texteditor_receipt.setBorder(null);
        texteditor_receipt.setFont(new java.awt.Font("sansserif", 0, 11)); // NOI18N
        texteditor_receipt.setCaretColor(new java.awt.Color(153, 153, 0));
        texteditor_receipt.setFocusCycleRoot(false);
        texteditor_receipt.setFocusable(false);
        jScrollPane3.setViewportView(texteditor_receipt);
        texteditor_receipt.setContentType("text/html");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_subtotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_subtotal)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        label_dateday.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        label_dateday.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_dateday.setText("TUESDAY");

        label_datetime.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        label_datetime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_datetime.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        but_add.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        but_add.setText("<html> <center> ADD <br><b>[F2/ENTER] <b> </center> </html>");
        but_add.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 0)));
        but_add.setContentAreaFilled(false);
        but_add.setFocusPainted(false);
        but_add.setFocusable(false);
        but_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_addActionPerformed(evt);
            }
        });

        but_void.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        but_void.setText("<html> <center> VOID <br> <b>[F3]</b> </center> </html>");
        but_void.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 0)));
        but_void.setContentAreaFilled(false);
        but_void.setFocusPainted(false);
        but_void.setFocusable(false);
        but_void.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_voidActionPerformed(evt);
            }
        });

        but_cancel.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        but_cancel.setText("<html> <center> CANCEL <br> <b>[F4]</b> </center> </html>");
        but_cancel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 0)));
        but_cancel.setContentAreaFilled(false);
        but_cancel.setFocusPainted(false);
        but_cancel.setFocusable(false);
        but_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_cancelActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel4.setText("CASHER LOGIN");

        label_userlog.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        label_userlog.setText("D-TECH ADMINISTRATOR");

        but_logout.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        but_logout.setText("<html> <center> LOGOUT <br> <b>[F8]</b> </center> </html>");
        but_logout.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 0)));
        but_logout.setContentAreaFilled(false);
        but_logout.setFocusPainted(false);
        but_logout.setFocusable(false);
        but_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_logoutActionPerformed(evt);
            }
        });

        but_search.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        but_search.setText("<html> <center> SEARCH <br> <b>[F5]</b> </center> </html>");
        but_search.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 0)));
        but_search.setContentAreaFilled(false);
        but_search.setFocusPainted(false);
        but_search.setFocusable(false);
        but_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_searchActionPerformed(evt);
            }
        });

        dashboard_panel.setOpaque(false);
        dashboard_panel.setLayout(new java.awt.CardLayout());

        panel_dashboard.setBackground(new java.awt.Color(204, 204, 0));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 72)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("D-TECH");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 72)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("SOLUTIONS");

        jSeparator1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 0), 10, true));

        javax.swing.GroupLayout panel_dashboardLayout = new javax.swing.GroupLayout(panel_dashboard);
        panel_dashboard.setLayout(panel_dashboardLayout);
        panel_dashboardLayout.setHorizontalGroup(
            panel_dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_dashboardLayout.createSequentialGroup()
                .addGap(197, 197, 197)
                .addComponent(jSeparator1)
                .addGap(196, 196, 196))
            .addGroup(panel_dashboardLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel_dashboardLayout.setVerticalGroup(
            panel_dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_dashboardLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dashboard_panel.add(panel_dashboard, "dashboard");

        panel_console.setOpaque(false);

        jEditorPane1.setFocusable(false);

        javax.swing.GroupLayout panel_consoleLayout = new javax.swing.GroupLayout(panel_console);
        panel_console.setLayout(panel_consoleLayout);
        panel_consoleLayout.setHorizontalGroup(
            panel_consoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_consoleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jEditorPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel_consoleLayout.setVerticalGroup(
            panel_consoleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_consoleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jEditorPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                .addContainerGap())
        );

        dashboard_panel.add(panel_console, "console");

        panel_transaction.setOpaque(false);

        table_transaction.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PRODUCT NO.", "DETAILS", "QTY", "PRICE", "TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_transaction.setFocusable(false);
        jScrollPane1.setViewportView(table_transaction);
        jScrollPane1.setOpaque(false);
        jScrollPane1.getViewport().setOpaque(false);
        //table_transaction.setRowHeight(50);
        if (table_transaction.getColumnModel().getColumnCount() > 0) {
            table_transaction.getColumnModel().getColumn(0).setMinWidth(0);
            table_transaction.getColumnModel().getColumn(0).setPreferredWidth(0);
            table_transaction.getColumnModel().getColumn(0).setMaxWidth(0);
            table_transaction.getColumnModel().getColumn(2).setMinWidth(50);
            table_transaction.getColumnModel().getColumn(2).setPreferredWidth(50);
            table_transaction.getColumnModel().getColumn(2).setMaxWidth(50);
            table_transaction.getColumnModel().getColumn(3).setMinWidth(50);
            table_transaction.getColumnModel().getColumn(3).setPreferredWidth(50);
            table_transaction.getColumnModel().getColumn(3).setMaxWidth(50);
            table_transaction.getColumnModel().getColumn(4).setMinWidth(50);
            table_transaction.getColumnModel().getColumn(4).setPreferredWidth(50);
            table_transaction.getColumnModel().getColumn(4).setMaxWidth(50);
        }

        javax.swing.GroupLayout panel_transactionLayout = new javax.swing.GroupLayout(panel_transaction);
        panel_transaction.setLayout(panel_transactionLayout);
        panel_transactionLayout.setHorizontalGroup(
            panel_transactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 701, Short.MAX_VALUE)
        );
        panel_transactionLayout.setVerticalGroup(
            panel_transactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
        );

        jScrollPane1.setBorder(null);
        jScrollPane1.getViewport().setBorder(null);

        dashboard_panel.add(panel_transaction, "transaction");

        but_sales1.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        but_sales1.setText("<html> <center> PAY <br> <b>[F6]</b> </center> </html>");
        but_sales1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 0)));
        but_sales1.setContentAreaFilled(false);
        but_sales1.setFocusPainted(false);
        but_sales1.setFocusable(false);

        but_sales2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        but_sales2.setText("<html> <center> LOCK <br> <b>[F7]</b> </center> </html>");
        but_sales2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 0)));
        but_sales2.setContentAreaFilled(false);
        but_sales2.setFocusPainted(false);
        but_sales2.setFocusable(false);

        field_barcode.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        field_barcode.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        field_barcode.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        field_barcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                field_barcodeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dashboard_panel, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(label_userlog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_datetime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_dateday, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(but_logout, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_sales2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_sales1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_search, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_void, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_add, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(field_barcode))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_dateday, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_datetime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(label_userlog, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dashboard_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(field_barcode, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(but_sales1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(but_search, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(but_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(but_sales2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(but_logout, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(but_add, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(but_void, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout panel_salesLayout = new javax.swing.GroupLayout(panel_sales);
        panel_sales.setLayout(panel_salesLayout);
        panel_salesLayout.setHorizontalGroup(
            panel_salesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_salesLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_salesLayout.setVerticalGroup(
            panel_salesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        card_panel.add(panel_sales, "salescard");

        menu_outer.setFocusable(false);
        menu_outer.setNextFocusableComponent(field_barcode);
        menu_outer.setPreferredSize(new java.awt.Dimension(63, 0));
        menu_outer.setRequestFocusEnabled(false);
        menu_outer.setVerifyInputWhenFocusTarget(false);

        Menufile.setText("FILE");

        MenuItemlock.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F7, 0));
        MenuItemlock.setText("Lock");
        MenuItemlock.setNextFocusableComponent(field_barcode);
        MenuItemlock.setRequestFocusEnabled(false);
        MenuItemlock.setVerifyInputWhenFocusTarget(false);
        MenuItemlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemlockActionPerformed(evt);
            }
        });
        Menufile.add(MenuItemlock);

        MenuItemlogout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F8, 0));
        MenuItemlogout.setText("Logout");
        MenuItemlogout.setNextFocusableComponent(field_barcode);
        MenuItemlogout.setRequestFocusEnabled(false);
        MenuItemlogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemlogoutActionPerformed(evt);
            }
        });
        Menufile.add(MenuItemlogout);

        MenuItemexit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        MenuItemexit.setText("Exit");
        MenuItemexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemexitActionPerformed(evt);
            }
        });
        Menufile.add(MenuItemexit);

        menu_outer.add(Menufile);

        Menuitem.setText("MENU");
        Menuitem.setFocusable(false);
        Menuitem.setNextFocusableComponent(field_barcode);
        Menuitem.setRequestFocusEnabled(false);
        Menuitem.setVerifyInputWhenFocusTarget(false);

        MenuItemadd.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        MenuItemadd.setText("Add Item");
        MenuItemadd.setNextFocusableComponent(field_barcode);
        MenuItemadd.setRequestFocusEnabled(false);
        MenuItemadd.setVerifyInputWhenFocusTarget(false);
        MenuItemadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemaddActionPerformed(evt);
            }
        });
        Menuitem.add(MenuItemadd);

        MenuItemvoid.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        MenuItemvoid.setText("Void Item");
        MenuItemvoid.setNextFocusableComponent(field_barcode);
        MenuItemvoid.setRequestFocusEnabled(false);
        MenuItemvoid.setVerifyInputWhenFocusTarget(false);
        MenuItemvoid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemvoidActionPerformed(evt);
            }
        });
        Menuitem.add(MenuItemvoid);

        MenuItemcancel.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, 0));
        MenuItemcancel.setText("Cancel Item");
        MenuItemcancel.setNextFocusableComponent(field_barcode);
        MenuItemcancel.setRequestFocusEnabled(false);
        MenuItemcancel.setVerifyInputWhenFocusTarget(false);
        MenuItemcancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemcancelActionPerformed(evt);
            }
        });
        Menuitem.add(MenuItemcancel);

        MenuItemsearch.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        MenuItemsearch.setText("Search Item");
        MenuItemsearch.setNextFocusableComponent(field_barcode);
        MenuItemsearch.setRequestFocusEnabled(false);
        MenuItemsearch.setVerifyInputWhenFocusTarget(false);
        MenuItemsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemsearchActionPerformed(evt);
            }
        });
        Menuitem.add(MenuItemsearch);

        MenuItemmember.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        MenuItemmember.setText("Member");
        MenuItemmember.setNextFocusableComponent(field_barcode);
        MenuItemmember.setRequestFocusEnabled(false);
        MenuItemmember.setVerifyInputWhenFocusTarget(false);
        MenuItemmember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemmemberActionPerformed(evt);
            }
        });
        Menuitem.add(MenuItemmember);

        menu_outer.add(Menuitem);

        Menuoption.setText("OPTION");

        Menuitemoptquantity.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_END, 0));
        Menuitemoptquantity.setText("Bulk Quantity");
        Menuitemoptquantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuitemoptquantityActionPerformed(evt);
            }
        });
        Menuoption.add(Menuitemoptquantity);

        menu_outer.add(Menuoption);

        setJMenuBar(menu_outer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(card_panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(card_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuItemaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemaddActionPerformed
        // TODO add your handling code here:
        System.err.println("Add Item. . .");
        but_addActionPerformed(evt);
    }//GEN-LAST:event_MenuItemaddActionPerformed

    private void but_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_addActionPerformed
        // TODO add your handling code here:
        int qty = 0;
        boolean valitqty = false;
        if (!field_barcode.getText().isEmpty()) {
            if (!bulk_quantity) {
                qty = 1;
                valitqty = true;
            } else {
                try {

                    qty = (int) Integer.parseInt(JOptionPane.showInputDialog("Enter Quantity:"));
                    valitqty = true;

                } catch (NumberFormatException e) {
                    System.err.println(e.getMessage());
                    JOptionPane.showConfirmDialog(this, "Enter a valid input for quantity.", "D-TECH WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.WARNING_MESSAGE);
                    valitqty = false;
                }
            }
        }
        if (valitqty) {
            addselectitem(field_barcode.getText(), qty);
        }
    }//GEN-LAST:event_but_addActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        System.err.println("Generating X-Read. . .");
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void but_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_logoutActionPerformed
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(this, "Do you really want to logout?", "EXIT", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (x == JOptionPane.YES_OPTION) {
            ((CardLayout) card_panel.getLayout()).show(card_panel, "logincard");
            load = 2;
            setCardViewportView("login");
        }
    }//GEN-LAST:event_but_logoutActionPerformed

    private void MenuItemlogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemlogoutActionPerformed
        // TODO add your handling code here:
        System.err.println("System Lock. . .");
        but_logoutActionPerformed(evt);
    }//GEN-LAST:event_MenuItemlogoutActionPerformed

    private void but_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_cancelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_but_cancelActionPerformed

    private void label_subtotalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_label_subtotalFocusGained
        // TODO add your handling code here:
        label_subtotal.setToolTipText(label_subtotal.getText());
    }//GEN-LAST:event_label_subtotalFocusGained

    private void field_barcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_field_barcodeActionPerformed
        // TODO add your handling code here:
        but_addActionPerformed(evt);
    }//GEN-LAST:event_field_barcodeActionPerformed

    private void MenuItemvoidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemvoidActionPerformed
        // TODO add your handling code here:
        System.err.println("Void Item. . .");
    }//GEN-LAST:event_MenuItemvoidActionPerformed

    private void MenuItemcancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemcancelActionPerformed
        // TODO add your handling code here:
        System.err.println("Cancel Item. . .");
    }//GEN-LAST:event_MenuItemcancelActionPerformed

    private void MenuItemsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemsearchActionPerformed
        // TODO add your handling code here:
        System.err.println("Search Item. . .");
        but_searchActionPerformed(evt);
    }//GEN-LAST:event_MenuItemsearchActionPerformed

    private void MenuItemmemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemmemberActionPerformed
        // TODO add your handling code here:
        System.err.println("Scanning Member. . .");
    }//GEN-LAST:event_MenuItemmemberActionPerformed

    private void MenuItemlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemlockActionPerformed
        // TODO add your handling code here:
        System.err.println("System Lock. . .");
    }//GEN-LAST:event_MenuItemlockActionPerformed

    private void MenuitemoptquantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuitemoptquantityActionPerformed
        // TODO add your handling code here:
        System.err.println("Activate " + Menuitemoptquantity.getText());
        if (Menuitemoptquantity.getText().equalsIgnoreCase("Bulk Quantity")) {
            bulk_quantity = true;
            Menuitemoptquantity.setText("Single Quantity");
        } else {
            bulk_quantity = false;
            Menuitemoptquantity.setText("Bulk Quantity");
        }
    }//GEN-LAST:event_MenuitemoptquantityActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        System.err.println("Generating Z-Read. . .");
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void but_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_searchActionPerformed
        // TODO add your handling code here:
        sales_productsearch = new Sales_ProductSearch(this, true, sales_mainframe);
//        sales_productsearch.setBackground(new Color(0, 0, 0, 0));
//        sales_productsearch.setShape(new RoundRectangle2D.Double(0, 0, 690, 380, 50, 50));
        sales_productsearch.setVisible(true);
    }//GEN-LAST:event_but_searchActionPerformed

    private void but_voidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_voidActionPerformed
        // TODO add your handling code here:
        if (table_transaction.getRowCount() > -1) {

        }
    }//GEN-LAST:event_but_voidActionPerformed

    private void MenuItemexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemexitActionPerformed
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(this, "Do you really want to exit?", "D-TECH CONFIRMATION", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (x == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_MenuItemexitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sales_Mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sales_Mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sales_Mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sales_Mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sales_Mainframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem MenuItemadd;
    private javax.swing.JMenuItem MenuItemcancel;
    private javax.swing.JMenuItem MenuItemexit;
    private javax.swing.JMenuItem MenuItemlock;
    private javax.swing.JMenuItem MenuItemlogout;
    private javax.swing.JMenuItem MenuItemmember;
    private javax.swing.JMenuItem MenuItemsearch;
    private javax.swing.JMenuItem MenuItemvoid;
    private javax.swing.JMenu Menufile;
    private javax.swing.JMenu Menuitem;
    private javax.swing.JMenuItem Menuitemoptquantity;
    private javax.swing.JMenu Menuoption;
    private javax.swing.JMenu REPORTS;
    private javax.swing.JButton but_add;
    private javax.swing.JButton but_cancel;
    private javax.swing.JButton but_logout;
    private javax.swing.JButton but_sales1;
    private javax.swing.JButton but_sales2;
    private javax.swing.JButton but_search;
    private javax.swing.JButton but_void;
    public static javax.swing.JPanel card_panel;
    private javax.swing.JPanel dashboard_panel;
    public javax.swing.JFormattedTextField field_barcode;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel label_dateday;
    private javax.swing.JLabel label_datetime;
    private javax.swing.JLabel label_loading;
    private javax.swing.JProgressBar label_loadingtext;
    private javax.swing.JLabel label_subtotal;
    private javax.swing.JLabel label_userlog;
    private javax.swing.JMenuBar menu_inner;
    private javax.swing.JMenuBar menu_outer;
    private javax.swing.JPanel panel_console;
    private javax.swing.JPanel panel_dashboard;
    private javax.swing.JPanel panel_login;
    private javax.swing.JPanel panel_sales;
    private javax.swing.JPanel panel_transaction;
    private javax.swing.JTable table_transaction;
    private javax.swing.JEditorPane texteditor_receipt;
    // End of variables declaration//GEN-END:variables

    private void total_transaction() {
        try {

            double total = 0.0;

            if (dtm.getRowCount() > 0) {
                for (int i = 0; i < dtm.getRowCount(); i++) {
                    total = total + (((double) Double.parseDouble(dtm.getValueAt(i, 2).toString())) * ((double) Double.parseDouble(dtm.getValueAt(i, 3).toString())));
                }
            }
            if (total > 1000000) {
                label_subtotal.setFont(new java.awt.Font("sansserif", 1, 28));
            }
            label_subtotal.setText(new DecimalFormat("#,##0.00").format(total) + "");
            field_barcode.setText(null);
        } catch (Exception e) {
            System.err.println(e.getMessage());
            e.printStackTrace();
        }
    }

    private void setCardViewportView(String cardname) {
        if (cardname.equalsIgnoreCase("login")) {
            label_loadingtext.setVisible(true);
            label_loading.setVisible(true);

            loadtimer = new javax.swing.Timer(1000, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    load++;
                    if (load % 2 == 1) {
                        label_loading.setText("Loading Database . ");
                    } else {
                        label_loading.setText("Loading Database . .");
                    }

                    if (load == 5) {
                        loadtimer.stop();
                        load = 0;
                        label_loadingtext.setVisible(false);
                        label_loading.setVisible(false);
                        sales_login = new Sales_Login(sales_mainframe);
                        loginprompt = new JDialog(sales_mainframe, true);
                        loginprompt.setUndecorated(false);
                        loginprompt.getContentPane().add(sales_login);
                        loginprompt.setSize(sales_login.getPreferredSize());
                        loginprompt.setUndecorated(true);
                        loginprompt.setLocationRelativeTo(sales_mainframe);
                        loginprompt.setVisible(true);
                    }

                }
            });
            loadtimer.start();
        } else if (cardname.equalsIgnoreCase("sales")) {

        }
    }

    void setConnection(Connection connection) {
        this.connection = connection;
    }

    void showcard(String card) {
        if (card.equalsIgnoreCase("salescard")) {
            ((CardLayout) card_panel.getLayout()).show(card_panel, card);
            field_barcode.setFocusable(true);
            field_barcode.setFocusCycleRoot(true);
            field_barcode.setRequestFocusEnabled(true);
            field_barcode.requestFocusInWindow();
        }
    }

    private boolean validatebarcodeitem(String Barcode) {
        boolean validated = false;
        try {
            statement = connection.createStatement();
            result = statement.executeQuery("Select quantity from product where barcode = '" + Barcode + "'");
            if (result.next()) {
                if (result.getInt(1) <= 0) {
                    validated = false;
                    System.err.println("Item out of stock!");
                    JOptionPane.showConfirmDialog(this, "Item out of stock!", "D-TECH WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.WARNING_MESSAGE);
                } else {
                    validated = true;
                }
            } else {
                JOptionPane.showConfirmDialog(this, "Barcode does not exist!", "D-TECH WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.WARNING_MESSAGE);
                field_barcode.setText(null);
            }
            statement.close();
            result.close();
        } catch (Exception e) {
            System.err.println(e.getMessage());
            e.printStackTrace();
        }
        return validated;
    }

    void addselectitem(String Barcode, int qty) {

        ((CardLayout) dashboard_panel.getLayout()).show(dashboard_panel, "transaction");
        if (validatebarcodeitem(Barcode)) {
            StringReader reader = null;
            String appendreciept;
            double price = 0.00;
            String product_description = "", total = "";
            try {
                statement = connection.createStatement();
                System.out.println("select `product_no.`, concat(barcode,' - ',short_description)as product, quantity  from product where barcode = '" + Barcode + "'");
                result = statement.executeQuery("select `product_no.`, concat(barcode,' - ',short_description)as product, quantity  from product where barcode = '" + Barcode + "'");
                if (result.next()) {
                    product_description = result.getString(2);
                    appendreciept = "<tr><td style='font-size:7px;'>" + (table_transaction.getRowCount() + 1) + "</td><td id='item' style= 'font-size:7px;' > "
                            + product_description + "</td>";
                    if (qty > result.getDouble(3)) {
                        JOptionPane.showConfirmDialog(this, "Insufficient stock!", "D-TECH WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.WARNING_MESSAGE);

                        statement.close();
                        result.close();
                        return;
                    }
                    statement.close();
                    result.close();
                    statement = connection.createStatement();
//                            Price_No., Product_No., Old_Price, Old_Price_Date, New_Price, New_Price_Date, User_ID, Datetime_Created, Datetime_Updated
                    System.out.println("select * from product_price where `product_no.` = (select `product_no.` from product where barcode = '" + Barcode + "') order by new_price_date desc limit 1; ");
                    result = statement.executeQuery("select * from product_price where `product_no.` = (select `product_no.` from product where barcode = '" + Barcode + "') order by new_price_date desc limit 1; ");
                    if (result.next()) {

                        if (table_transaction.getRowCount() < 1) {
                            texteditor_receipt.setText("<html> <center>"
                                    + "<p style='font-size:7px; '> Republic of Philippines"
                                    + "<br> <span style='font-size:10px; font-weight: 800; padding: 0px; margin:0px; '> D-Tech Solutions </span> "
                                    + "<br>Barangay Osmeña, Tagum "
                                    + "<br> Davao del Norte, 8100 "
                                    + "<br> Tel: 082-123-1234 "
                                    + "<br> Email: dtechsolutions@gmail.com </p> <br>"
                                    + "<hr style='border-width:1px; border-style:solid; border-color:#000000; margin: 0px 20px 0px 20px;'>"
                                    + ""
                                    + "</center>"
                                    + "<table width='100%'>"
                                    + "<thead>"
                                    + "     <th style='style='text-align:left;' width:'8%'>#</th>"
                                    + "     <th style='text-align: center;' width:'72%'>Item</th>"
                                    + "     <th style='text-align: right;' width:'20%'>Total</th>"
                                    + "</thead>"
                                    + "<tbody>");
                        }
                        price = result.getDouble(5);

                        total = new DecimalFormat("#,##0.00").format(qty * price);
                        appendreciept = appendreciept + "<td id='item-equation' style= 'font-size:7px; text-align:right;' >"
                                + qty + " x "
                                + new DecimalFormat("#,##0.00").format(price)
                                + " &nbsp;&nbsp;&nbsp;" + total + "</td></tr>";

                        dtm.addRow(new Object[]{result.getString(1), product_description, qty, new DecimalFormat("#,##0.00").format(price), total});

                        HTMLEditorKit editor = (HTMLEditorKit) texteditor_receipt.getEditorKit();
                        reader = new StringReader(appendreciept);
                        editor.read(reader, texteditor_receipt.getDocument(), texteditor_receipt.getDocument().getLength());

                        total_transaction();
                    } else {
                        JOptionPane.showConfirmDialog(this, "No Price found posted to this Item!", "D-TECH WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.WARNING_MESSAGE);
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }

    void setuserID(String userID) {
        this.userID = userID;
        getuserFullname();
    }

    public void getuserFullname() {

        try {
            statement = connection.createStatement();
            result = statement.executeQuery("SELECT concat(lastname,', ',Firstname,' ',substr(Middlename,1,1))as userFullname FROM `user` u join `user_profile` up on u.`Profile_No.` = up.`Profile_No.` "
                    + "where u.User_ID = '" + userID + "'");

            if (result.next()) {
                userFullname = result.getString(1);
                label_userlog.setText(userFullname);
            }

            statement.close();
            result.close();
            getPosition();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void getPosition() {
        try {
            statement = connection.createStatement();
            System.out.println("SELECT  (Select position from user_position where `position_no.` = up.`position_no.`)as Position FROM `user` u join `user_profile` up on u.`Profile_No.` = up.`Profile_No.` "
                    + " where u.User_ID = '" + userID + "'");
            result = statement.executeQuery("SELECT  (Select position from user_position where `position_no.` = up.`position_no.`)as Position FROM `user` u join `user_profile` up on u.`Profile_No.` = up.`Profile_No.` "
                    + " where u.User_ID = '" + userID + "'");

            if (result.next()) {
                position = result.getString(1);
            }

            statement.close();
            result.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
