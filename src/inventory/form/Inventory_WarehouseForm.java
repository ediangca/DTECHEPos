/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory.form;

import inventory.Inventory_SupplierList;
import inventory.Inventory_UserSettings;
import inventory.Inventory_WarehouseList;
import java.awt.CardLayout;

import java.sql.*;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class Inventory_WarehouseForm extends javax.swing.JDialog {

    /**
     * Creates new form Inventory_ProductForm
     */
    Inventory_WarehouseList inventory_warehouselist;
    String validated_fields = "Please check the ff. fields:\n\n";

    Connection connection = null;
    Statement statement;
    ResultSet result;

    DefaultTableModel dtm_supplierlist;
    DefaultTableModel dtm_productlist;
    DefaultTableModel dtm_product;

    String Warehouse_No = "";
    String Supplier_No = "";

    public Inventory_WarehouseForm(java.awt.Frame parent, boolean modal, Inventory_WarehouseList inventory_warehouselist) {
        super(parent, modal);
        initComponents();
        this.inventory_warehouselist = inventory_warehouselist;
        this.connection = inventory_warehouselist.connection;
        resetproducttable();
        setLocationRelativeTo(parent);
    }

    public Inventory_WarehouseForm(java.awt.Frame parent, boolean modal, Inventory_WarehouseList inventory_warehouselist, String Warehouse_No) {
        super(parent, modal);
        initComponents();
        this.inventory_warehouselist = inventory_warehouselist;
        this.connection = inventory_warehouselist.connection;
        this.Warehouse_No = Warehouse_No;
        resetproducttable();

        but_save.setText("UPDATE");
        but_post.setVisible(false);
        jRadioButton1.setVisible(false);
        field_warehouseno.setText(Warehouse_No);
        field_warehouseno.setEnabled(false);
        but_wbrowsesupplier.setEnabled(false);
        restoredata();
        setLocationRelativeTo(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        but_save = new javax.swing.JButton();
        but_cancel = new javax.swing.JButton();
        but_post = new javax.swing.JButton();
        panel_main = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panel_uinfo = new javax.swing.JPanel();
        field_warehouseno = new javax.swing.JTextField();
        field_wsupplier = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        field_wtc = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        but_wbrowsesupplier = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        field_wtd = new javax.swing.JFormattedTextField();
        field_wta = new javax.swing.JFormattedTextField();
        field_wtv = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        combo_wptype = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        combo_wterm = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        producttable = new javax.swing.JTable();
        but_add = new javax.swing.JButton();
        but_remove = new javax.swing.JButton();
        field_wsearchbarcode = new javax.swing.JTextField();
        but_browse = new javax.swing.JButton();
        label_totalproduct = new javax.swing.JLabel();
        panel_supplierlist = new javax.swing.JPanel();
        but_wsback = new javax.swing.JButton();
        but_setsupplier = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        supplierlisttable = new javax.swing.JTable();
        panel_productlist = new javax.swing.JPanel();
        but_wpback = new javax.swing.JButton();
        but_addproduct = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        productlisttable = new javax.swing.JTable();
        field_search = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("WAREHOUSE FORM");
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(204, 204, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 0));
        jLabel1.setText("WAREHOUSE FORM");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 0));

        but_save.setText("SAVE");
        but_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_saveActionPerformed(evt);
            }
        });

        but_cancel.setText("CLOSE");
        but_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_cancelActionPerformed(evt);
            }
        });

        but_post.setText("SAVE AND POST");
        but_post.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_postActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(but_post, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(but_save, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(but_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(but_cancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(but_save, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(but_post, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        but_post.setVisible(false);

        panel_main.setOpaque(false);
        panel_main.setLayout(new java.awt.CardLayout());

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        panel_uinfo.setBackground(new java.awt.Color(255, 255, 255));

        field_warehouseno.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        field_wsupplier.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        field_wsupplier.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        field_wsupplier.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        field_wsupplier.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        field_wsupplier.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Warehouse No.");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Supplier");

        field_wtc.setEditable(false);
        field_wtc.setBackground(new java.awt.Color(0, 0, 0));
        field_wtc.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        field_wtc.setForeground(new java.awt.Color(102, 255, 0));
        field_wtc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        field_wtc.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        field_wtc.setText("0.00 ");
        field_wtc.setDisabledTextColor(new java.awt.Color(102, 255, 0));
        field_wtc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        field_wtc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                field_wtcFocusLost(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Total Cost");

        jRadioButton1.setText("Auto");
        jRadioButton1.setOpaque(false);
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        but_wbrowsesupplier.setText("+");
        but_wbrowsesupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_wbrowsesupplierActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Total Discount");

        field_wtd.setEditable(false);
        field_wtd.setBackground(new java.awt.Color(0, 0, 0));
        field_wtd.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        field_wtd.setForeground(new java.awt.Color(102, 255, 0));
        field_wtd.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        field_wtd.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        field_wtd.setText("0.00 ");
        field_wtd.setDisabledTextColor(new java.awt.Color(102, 255, 0));
        field_wtd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        field_wtd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                field_wtdFocusLost(evt);
            }
        });

        field_wta.setEditable(false);
        field_wta.setBackground(new java.awt.Color(0, 0, 0));
        field_wta.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        field_wta.setForeground(new java.awt.Color(102, 255, 0));
        field_wta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        field_wta.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        field_wta.setText("0.00 ");
        field_wta.setDisabledTextColor(new java.awt.Color(102, 255, 0));
        field_wta.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        field_wta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                field_wtaFocusLost(evt);
            }
        });

        field_wtv.setEditable(false);
        field_wtv.setBackground(new java.awt.Color(0, 0, 0));
        field_wtv.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        field_wtv.setForeground(new java.awt.Color(102, 255, 0));
        field_wtv.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        field_wtv.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        field_wtv.setText("0.00 ");
        field_wtv.setDisabledTextColor(new java.awt.Color(102, 255, 0));
        field_wtv.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        field_wtv.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                field_wtvFocusLost(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Total Vat");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Amount");

        combo_wptype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT", "CASH", "CHECK", "BANK" }));
        combo_wptype.setBorder(null);
        combo_wptype.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Payment Type");

        combo_wterm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT", "NONE", "MONTHLY", "QUARTER", "ANNUAL" }));
        combo_wterm.setBorder(null);
        combo_wterm.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Term");

        javax.swing.GroupLayout panel_uinfoLayout = new javax.swing.GroupLayout(panel_uinfo);
        panel_uinfo.setLayout(panel_uinfoLayout);
        panel_uinfoLayout.setHorizontalGroup(
            panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_uinfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_uinfoLayout.createSequentialGroup()
                        .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_uinfoLayout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(combo_wptype, 0, 250, Short.MAX_VALUE))
                            .addGroup(panel_uinfoLayout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(field_wtc))
                            .addGroup(panel_uinfoLayout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(field_wtd))
                            .addGroup(panel_uinfoLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(field_warehouseno)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_uinfoLayout.createSequentialGroup()
                                .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panel_uinfoLayout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(combo_wterm, 0, 257, Short.MAX_VALUE))
                                    .addGroup(panel_uinfoLayout.createSequentialGroup()
                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(field_wta))
                                    .addGroup(panel_uinfoLayout.createSequentialGroup()
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(field_wtv)))
                                .addGap(10, 10, 10))
                            .addGroup(panel_uinfoLayout.createSequentialGroup()
                                .addComponent(jRadioButton1)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(panel_uinfoLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_wbrowsesupplier)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(field_wsupplier)
                        .addContainerGap())))
        );
        panel_uinfoLayout.setVerticalGroup(
            panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_uinfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(field_warehouseno, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(8, 8, 8)
                .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                        .addComponent(but_wbrowsesupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(field_wsupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_uinfoLayout.createSequentialGroup()
                        .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field_wtc, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field_wtd, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel_uinfoLayout.createSequentialGroup()
                        .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field_wtv, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field_wta, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(combo_wterm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(combo_wptype, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("DETAILS", panel_uinfo);

        jPanel4.setOpaque(false);

        producttable.setAutoCreateRowSorter(true);
        producttable.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        producttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PRODUCT NO.", "DESCRIPTION", "COST", "# PER", "UNIT", "QTY", "TC", "DC", "VAT", "TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        producttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                producttableMouseClicked(evt);
            }
        });
        producttable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                producttablePropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(producttable);
        if (producttable.getColumnModel().getColumnCount() > 0) {
            producttable.getColumnModel().getColumn(0).setMinWidth(120);
            producttable.getColumnModel().getColumn(0).setPreferredWidth(120);
            producttable.getColumnModel().getColumn(1).setMinWidth(180);
            producttable.getColumnModel().getColumn(1).setPreferredWidth(180);
            producttable.getColumnModel().getColumn(2).setResizable(false);
            producttable.getColumnModel().getColumn(2).setPreferredWidth(100);
            producttable.getColumnModel().getColumn(3).setMinWidth(100);
            producttable.getColumnModel().getColumn(3).setPreferredWidth(100);
            producttable.getColumnModel().getColumn(4).setResizable(false);
            producttable.getColumnModel().getColumn(4).setPreferredWidth(100);
            producttable.getColumnModel().getColumn(5).setResizable(false);
            producttable.getColumnModel().getColumn(5).setPreferredWidth(100);
            producttable.getColumnModel().getColumn(6).setResizable(false);
            producttable.getColumnModel().getColumn(6).setPreferredWidth(100);
            producttable.getColumnModel().getColumn(7).setResizable(false);
            producttable.getColumnModel().getColumn(7).setPreferredWidth(100);
            producttable.getColumnModel().getColumn(8).setResizable(false);
            producttable.getColumnModel().getColumn(8).setPreferredWidth(100);
            producttable.getColumnModel().getColumn(9).setResizable(false);
            producttable.getColumnModel().getColumn(9).setPreferredWidth(180);
        }

        but_add.setText("ADD");
        but_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_addActionPerformed(evt);
            }
        });

        but_remove.setText("REMOVE");
        but_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_removeActionPerformed(evt);
            }
        });

        field_wsearchbarcode.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        field_wsearchbarcode.setForeground(new java.awt.Color(102, 102, 102));
        field_wsearchbarcode.setText("Enter Barcode");
        field_wsearchbarcode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                field_wsearchbarcodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                field_wsearchbarcodeFocusLost(evt);
            }
        });
        field_wsearchbarcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                field_wsearchbarcodeActionPerformed(evt);
            }
        });

        but_browse.setText("+");
        but_browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_browseActionPerformed(evt);
            }
        });

        label_totalproduct.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        label_totalproduct.setText("Total Product : 0");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 777, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(but_browse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(field_wsearchbarcode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_add, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_remove, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(label_totalproduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(but_add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(field_wsearchbarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(but_remove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(but_browse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_totalproduct))
        );

        but_post.setVisible(false);
        but_post.setVisible(false);
        but_post.setVisible(false);

        jTabbedPane1.addTab("PRODUCT", jPanel4);

        panel_main.add(jTabbedPane1, "form");

        panel_supplierlist.setOpaque(false);

        but_wsback.setText("BACK");
        but_wsback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_wsbackActionPerformed(evt);
            }
        });

        but_setsupplier.setText("SET");
        but_setsupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_setsupplierActionPerformed(evt);
            }
        });

        supplierlisttable.setAutoCreateRowSorter(true);
        supplierlisttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Supplier No.", "Supplier Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        supplierlisttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                supplierlisttableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(supplierlisttable);
        if (supplierlisttable.getColumnModel().getColumnCount() > 0) {
            supplierlisttable.getColumnModel().getColumn(0).setMinWidth(0);
            supplierlisttable.getColumnModel().getColumn(0).setPreferredWidth(0);
            supplierlisttable.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        javax.swing.GroupLayout panel_supplierlistLayout = new javax.swing.GroupLayout(panel_supplierlist);
        panel_supplierlist.setLayout(panel_supplierlistLayout);
        panel_supplierlistLayout.setHorizontalGroup(
            panel_supplierlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_supplierlistLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_supplierlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_supplierlistLayout.createSequentialGroup()
                        .addComponent(but_wsback, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_setsupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 530, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel_supplierlistLayout.setVerticalGroup(
            panel_supplierlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_supplierlistLayout.createSequentialGroup()
                .addGroup(panel_supplierlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(but_wsback, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(but_setsupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
        );

        but_post.setVisible(false);
        but_post.setVisible(false);

        panel_main.add(panel_supplierlist, "supplierlist");

        panel_productlist.setOpaque(false);

        but_wpback.setText("BACK");
        but_wpback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_wpbackActionPerformed(evt);
            }
        });

        but_addproduct.setText("ADD");
        but_addproduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_addproductActionPerformed(evt);
            }
        });

        productlisttable.setAutoCreateRowSorter(true);
        productlisttable.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        productlisttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product No.", "Short Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productlisttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productlisttableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(productlisttable);
        if (productlisttable.getColumnModel().getColumnCount() > 0) {
            productlisttable.getColumnModel().getColumn(0).setMinWidth(0);
            productlisttable.getColumnModel().getColumn(0).setPreferredWidth(0);
            productlisttable.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        field_search.setText("Search here. .");
        field_search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                field_searchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                field_searchFocusLost(evt);
            }
        });
        field_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                field_searchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout panel_productlistLayout = new javax.swing.GroupLayout(panel_productlist);
        panel_productlist.setLayout(panel_productlistLayout);
        panel_productlistLayout.setHorizontalGroup(
            panel_productlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_productlistLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_productlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_productlistLayout.createSequentialGroup()
                        .addComponent(but_wpback, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_addproduct, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 530, Short.MAX_VALUE))
                    .addComponent(jScrollPane6)
                    .addComponent(field_search))
                .addContainerGap())
        );
        panel_productlistLayout.setVerticalGroup(
            panel_productlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_productlistLayout.createSequentialGroup()
                .addGroup(panel_productlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(but_wpback, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(but_addproduct, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(field_search, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                .addContainerGap())
        );

        but_post.setVisible(false);
        but_post.setVisible(false);

        panel_main.add(panel_productlist, "productlist");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void but_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_cancelActionPerformed
        // TODO add your handling code here:
        if (!but_save.isVisible()) {
            dispose();
            return;
        }
        int x = JOptionPane.showConfirmDialog(this, "Do you really want to cancel adding/updating user?", "CONFIRMATION", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (x == JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_but_cancelActionPerformed

    private void but_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_saveActionPerformed
        // TODO add your handling code here:

        if (validate_field()) {
            JOptionPane.showConfirmDialog(this, validated_fields, "D-TECH WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            if (but_save.getText().equalsIgnoreCase("save")) {
                statement = connection.createStatement();
                System.out.println("Saving Warehouse Information...");
//                Warehouse_No., Supplier_No., Total_Amount, Total_Discount, Total_Vat, Net_Amount, Payment_type, Terms, Datetime_Created, Datetime_Updated, User_ID, postflag, cancelflag
                statement.executeUpdate("insert into `warehouse` values('"
                        + field_warehouseno.getText() + "','"
                        + Supplier_No + "',"
                        + field_wtc.getText() + ","
                        + field_wtd.getText() + ","
                        + field_wtv.getText() + ","
                        + field_wta.getText() + ",'"
                        + combo_wptype.getSelectedItem() + "','"
                        + combo_wterm.getSelectedItem() + "','"
                        + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "','"
                        + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "','"
                        + inventory_warehouselist.inventory_mainframe.userID + "',0,0,0)");

                statement.close();
                for (int i = 0; i < producttable.getRowCount(); i++) {
//                    WP_No., Warehouse_No., Product_No., Cost, Unit, Qty, Discount, Total_Cost, Vat, Total_Amount, Datetime_Created, Datetime_Updated, User_ID
                    statement = connection.createStatement();
                    statement.executeUpdate("insert into `warehouse_product` values('"
                            + (field_warehouseno.getText() + "00" + (i + 1)) + "','"
                            + field_warehouseno.getText() + "',"
                            + producttable.getValueAt(i, 0) + ","
                            + producttable.getValueAt(i, 2) + ",'"
                            + producttable.getValueAt(i, 4) + "',"
                            + producttable.getValueAt(i, 5) + ","
                            + producttable.getValueAt(i, 6) + ","
                            + producttable.getValueAt(i, 7) + ","
                            + producttable.getValueAt(i, 8) + ","
                            + producttable.getValueAt(i, 9) + ",'"
                            + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "','"
                            + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "','"
                            + inventory_warehouselist.inventory_mainframe.userID + "')");

                    statement.close();
                }

                JOptionPane.showConfirmDialog(this, "Supplier Successfully Added!", "D-TECH INFORMATION", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);

            } else {
                statement = connection.createStatement();
                System.out.println("Updating Warehouse Information...");
//                Warehouse_No., Supplier_No., Total_Amount, Total_Discount, Total_Vat, Net_Amount, Payment_type, Terms, Datetime_Created, Datetime_Updated, User_ID, postflag, cancelflag
                statement.executeUpdate("update`warehouse` set Total_Amount ="
                        + field_wtc.getText() + ", Total_Discount ="
                        + field_wtd.getText() + ", Total_Vat ="
                        + field_wtv.getText() + ", Net_Amount ="
                        + field_wta.getText() + ", Payment_type ='"
                        + combo_wptype.getSelectedItem() + "', Terms ='"
                        + combo_wterm.getSelectedItem() + "', Datetime_Updated ='"
                        + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "', User_ID ='"
                        + inventory_warehouselist.inventory_mainframe.userID + "' where `Warehouse_No.` ='"
                        + field_warehouseno.getText() + "'");
                statement.close();

                statement = connection.createStatement();
                statement.executeUpdate("delete from warehouse_product where `Warehouse_No.` = '" + Warehouse_No + "'");
                statement.close();
                for (int i = 0; i < producttable.getRowCount(); i++) {
//                    WP_No., Warehouse_No., Product_No., Cost, Unit, Qty, Discount, Total_Cost, Vat, Total_Amount, Datetime_Created, Datetime_Updated, User_ID
                    statement = connection.createStatement();
                    statement.executeUpdate("insert into `warehouse_product` values('"
                            + (field_warehouseno.getText() + "00" + (i + 1)) + "','"
                            + field_warehouseno.getText() + "',"
                            + producttable.getValueAt(i, 0) + ","
                            + producttable.getValueAt(i, 2) + ",'"
                            + producttable.getValueAt(i, 4) + "',"
                            + producttable.getValueAt(i, 5) + ","
                            + producttable.getValueAt(i, 6) + ","
                            + producttable.getValueAt(i, 7) + ","
                            + producttable.getValueAt(i, 8) + ","
                            + producttable.getValueAt(i, 9) + ",'"
                            + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "','"
                            + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "','"
                            + inventory_warehouselist.inventory_mainframe.userID + "')");
                    statement.close();
                }

                JOptionPane.showConfirmDialog(this, "Supplier Successfully Updated!", "D-TECH INFORMATION", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);

                dispose();

            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showConfirmDialog(this, e.getMessage(), "D-TECH WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.ERROR_MESSAGE);

            dispose();
        }
        inventory_warehouselist.showQuery("SELECT * FROM warehouselist w");
        clearfield();
    }//GEN-LAST:event_but_saveActionPerformed

    private void but_postActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_postActionPerformed
        // TODO add your handling code here:
        if (validate_field()) {
            JOptionPane.showConfirmDialog(this, validated_fields, "D-TECH WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            statement = connection.createStatement();
            System.out.println("Saving Warehouse Information...");
//                Warehouse_No., Supplier_No., Total_Amount, Total_Discount, Total_Vat, Net_Amount, Payment_type, Terms, Datetime_Created, Datetime_Updated, User_ID, postflag, cancelflag
            statement.executeUpdate("insert into `warehouse` values('"
                    + field_warehouseno.getText() + "','"
                    + Supplier_No + "',"
                    + field_wtc.getText() + ","
                    + field_wtd.getText() + ","
                    + field_wtv.getText() + ","
                    + field_wta.getText() + ",'"
                    + combo_wptype.getSelectedItem() + "','"
                    + combo_wterm.getSelectedItem() + "','"
                    + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "','"
                    + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "','"
                    + inventory_warehouselist.inventory_mainframe.userID + "',1,0,0)");
            statement.close();
            for (int i = 0; i < producttable.getRowCount(); i++) {
//                    WP_No., Warehouse_No., Product_No., Cost, Unit, Qty, Discount, Total_Cost, Vat, Total_Amount, Datetime_Created, Datetime_Updated, User_ID
                statement = connection.createStatement();
                statement.executeUpdate("insert into `warehouse_product` values('"
                        + (field_warehouseno.getText() + "00" + (i + 1)) + "','"
                        + field_warehouseno.getText() + "',"
                        + producttable.getValueAt(i, 0) + ","
                        + producttable.getValueAt(i, 2) + ",'"
                        + producttable.getValueAt(i, 4) + "',"
                        + producttable.getValueAt(i, 5) + ","
                        + producttable.getValueAt(i, 6) + ","
                        + producttable.getValueAt(i, 7) + ","
                        + producttable.getValueAt(i, 8) + ","
                        + producttable.getValueAt(i, 9) + ",'"
                        + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "','"
                        + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "','"
                        + inventory_warehouselist.inventory_mainframe.userID + "')");
                statement.close();
                statement = connection.createStatement();
                statement.executeUpdate("update product set quantity = (quantity + " + producttable.getValueAt(i, 5) + ") where `Product_No.` ='" + producttable.getValueAt(i, 0) + "'");
                statement.close();
            }

            JOptionPane.showConfirmDialog(this, "Supplier Successfully Added!", "D-TECH INFORMATION", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showConfirmDialog(this, e.getMessage(), "D-TECH WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.ERROR_MESSAGE);

            dispose();
        }
        inventory_warehouselist.showQuery("SELECT * FROM warehouselist w");
        clearfield();
    }//GEN-LAST:event_but_postActionPerformed

    private void field_wtcFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_wtcFocusLost
        // TODO add your handling code here:
        if (field_wtc.getText().isEmpty()) {
            field_wtc.setText("0");
        }
    }//GEN-LAST:event_field_wtcFocusLost

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        if (jRadioButton1.isSelected()) {
            field_warehouseno.setText(getgeneratedwarehouseno());
        } else {
            field_warehouseno.setText("");
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void but_wbrowsesupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_wbrowsesupplierActionPerformed
        // TODO add your handling code here:
        ((CardLayout) panel_main.getLayout()).show(panel_main, "supplierlist");
        populatesupplierlist("SELECT `Supplier_No.`, Supplier FROM supplierlist s;");
    }//GEN-LAST:event_but_wbrowsesupplierActionPerformed

    private void field_wtdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_wtdFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_field_wtdFocusLost

    private void field_wtaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_wtaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_field_wtaFocusLost

    private void field_wtvFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_wtvFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_field_wtvFocusLost

    private void but_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_addActionPerformed
        // TODO add your handling code here:
        if (field_wsearchbarcode.getText().equalsIgnoreCase("Enter Barcode")) {
            JOptionPane.showConfirmDialog(this, "Please enter a Barcode first.", "D-TECH WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.WARNING_MESSAGE);
            field_wsearchbarcode.setText(null);
            return;
        }
        try {
            statement = connection.createStatement();
            result = statement.executeQuery("select `product_no.` from productlist where `product_no.` = (select `product_no.` from product where barcode = '" + field_wsearchbarcode.getText() + "')");
            if (result.next()) {
                showselectedproduct(result.getString(1));
            } else {
                JOptionPane.showConfirmDialog(this, "Either your Barcode is incorrect or not existing.", "D-TECH WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.WARNING_MESSAGE);
            }
            field_wsearchbarcode.setText(null);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_but_addActionPerformed

    private void but_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_removeActionPerformed
        // TODO add your handling code here:
        if (producttable.getSelectedRow() > -1) {
            int x = JOptionPane.showConfirmDialog(this, "Do you really want to remove the selected product?", "D-TECH CONFIRMATION", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            if (x == JOptionPane.YES_OPTION) {

                int selectedrow[] = producttable.getSelectedRows();

                System.out.println("RowCount >>> " + selectedrow.length);

                for (int row = 0; row <= selectedrow.length-1; row++) {
                    System.out.println("remove Row: " + selectedrow[(selectedrow.length-1) - row]);
                    dtm_product.removeRow(selectedrow[(selectedrow.length-1) - row]);

                }
            }

        }
    }//GEN-LAST:event_but_removeActionPerformed

    private void but_browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_browseActionPerformed
        // TODO add your handling code here:
        ((CardLayout) panel_main.getLayout()).show(panel_main, "productlist");
        populateproductlist("SELECT `Product_No.`, `Short_Description` FROM productlist p;");
    }//GEN-LAST:event_but_browseActionPerformed

    private void but_wsbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_wsbackActionPerformed
        // TODO add your handling code here:
        ((CardLayout) panel_main.getLayout()).show(panel_main, "form");
    }//GEN-LAST:event_but_wsbackActionPerformed

    private void but_setsupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_setsupplierActionPerformed
        // TODO add your handling code here:
        if (supplierlisttable.getSelectedRow() > -1) {
            ((CardLayout) panel_main.getLayout()).show(panel_main, "form");
            Supplier_No = supplierlisttable.getValueAt(supplierlisttable.getSelectedRow(), 0).toString();
            field_wsupplier.setText(supplierlisttable.getValueAt(supplierlisttable.getSelectedRow(), 0) + "-" + supplierlisttable.getValueAt(supplierlisttable.getSelectedRow(), 1));
        }
    }//GEN-LAST:event_but_setsupplierActionPerformed

    private void supplierlisttableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supplierlisttableMouseClicked
        // TODO add your handling code here:
        if (supplierlisttable.getSelectedRow() > -1 && supplierlisttable.getSelectedColumn() > -1) {
            supplierlisttable.setToolTipText(supplierlisttable.getValueAt(supplierlisttable.getSelectedRow(), supplierlisttable.getSelectedColumn()).toString());
        }
        if (supplierlisttable.getSelectedRow() > -1 && evt.getClickCount() >= 2) {
            ((CardLayout) panel_main.getLayout()).show(panel_main, "form");
            Supplier_No = supplierlisttable.getValueAt(supplierlisttable.getSelectedRow(), 0).toString();
            field_wsupplier.setText(supplierlisttable.getValueAt(supplierlisttable.getSelectedRow(), 0) + "-" + supplierlisttable.getValueAt(supplierlisttable.getSelectedRow(), 1));
        }
    }//GEN-LAST:event_supplierlisttableMouseClicked

    private void but_wpbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_wpbackActionPerformed
        // TODO add your handling code here:
        ((CardLayout) panel_main.getLayout()).show(panel_main, "form");
    }//GEN-LAST:event_but_wpbackActionPerformed

    private void but_addproductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_addproductActionPerformed
        // TODO add your handling code here:
        if (productlisttable.getSelectedRow() > -1) {
            int selectedrow[] = productlisttable.getSelectedRows();

            for (int row = 0; row < selectedrow.length; row++) {
                showselectedproduct(productlisttable.getValueAt(selectedrow[row], 0).toString());
            }
            ((CardLayout) panel_main.getLayout()).show(panel_main, "form");
        }
    }//GEN-LAST:event_but_addproductActionPerformed

    private void productlisttableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productlisttableMouseClicked
        // TODO add your handling code here:
        if (productlisttable.getSelectedRow() > -1 && productlisttable.getSelectedColumn() > -1) {
            productlisttable.setToolTipText(productlisttable.getValueAt(productlisttable.getSelectedRow(), productlisttable.getSelectedColumn()).toString());
        }
        if (evt.getClickCount() >= 2 && productlisttable.getSelectedRow() > -1) {
            but_addproductActionPerformed(null);
        }
    }//GEN-LAST:event_productlisttableMouseClicked

    private void field_wsearchbarcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_field_wsearchbarcodeActionPerformed
        // TODO add your handling code here:
        but_addActionPerformed(evt);
    }//GEN-LAST:event_field_wsearchbarcodeActionPerformed

    private void field_wsearchbarcodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_wsearchbarcodeFocusGained
        // TODO add your handling code here:
        if (field_wsearchbarcode.getText().equalsIgnoreCase("Enter Barcode")) {
            field_wsearchbarcode.setText("");
        }
    }//GEN-LAST:event_field_wsearchbarcodeFocusGained

    private void field_wsearchbarcodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_wsearchbarcodeFocusLost
        // TODO add your handling code here:
        if (field_wsearchbarcode.getText().isEmpty()) {
            field_wsearchbarcode.setText("Enter Barcode");
        }
    }//GEN-LAST:event_field_wsearchbarcodeFocusLost

    private void producttableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_producttableMouseClicked
        // TODO add your handling code here:
        if (producttable.getSelectedRow() > -1 && producttable.getSelectedColumn() > -1) {
            producttable.setToolTipText(producttable.getValueAt(producttable.getSelectedRow(), producttable.getSelectedColumn()).toString());
        }
    }//GEN-LAST:event_producttableMouseClicked

    private void producttablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_producttablePropertyChange
        // TODO add your handling code here:
        if (producttable.getSelectedRow() > -1) {
            double cost = 0.0, qty = 0.0, tc = 0.0, dc = 0.0, vat = 0.0, total = 0.0;
            int selectedrow[] = producttable.getSelectedRows();

            for (int row = 0; row < selectedrow.length; row++) {

                if (producttable.getValueAt(selectedrow[row], 2).toString().isEmpty()) {
                    producttable.setValueAt("0.00", selectedrow[row], 2);
                }
                if (producttable.getValueAt(selectedrow[row], 5).toString().isEmpty()) {
                    producttable.setValueAt("0.00", selectedrow[row], 5);
                }
                if (producttable.getValueAt(selectedrow[row], 6).toString().isEmpty()) {
                    producttable.setValueAt("0.00", selectedrow[row], 6);
                }
                if (producttable.getValueAt(selectedrow[row], 7).toString().isEmpty()) {
                    producttable.setValueAt("0.00", selectedrow[row], 7);
                }

                cost = Double.parseDouble(producttable.getValueAt(selectedrow[row], 2).toString());
                qty = Double.parseDouble(producttable.getValueAt(selectedrow[row], 5).toString());
                tc = Double.parseDouble(producttable.getValueAt(selectedrow[row], 6).toString());
                dc = Double.parseDouble(producttable.getValueAt(selectedrow[row], 7).toString());
                tc = (cost * qty);
                try {
                    statement = connection.createStatement();
                    result = statement.executeQuery("select isvatable from product where `product_no.` = '" + producttable.getValueAt(selectedrow[row], 0).toString() + "'");
                    if (result.next()) {
                        if (result.getBoolean(1)) {
                            vat = ((tc - dc) / 1.12) * 0.12;
                            total = (tc - dc) + vat;
                        } else {
                            vat = 0.00;
                            total = (tc - dc);
                        }
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }

                dtm_product.setValueAt(new DecimalFormat("#0.00").format(tc), selectedrow[row], 6);
                dtm_product.setValueAt(new DecimalFormat("#0.00").format(vat), selectedrow[row], 8);
                dtm_product.setValueAt(new DecimalFormat("#0.00").format(total), selectedrow[row], 9);
            }

            subtotal();

        }

    }//GEN-LAST:event_producttablePropertyChange

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        // TODO add your handling code here:
        if (jTabbedPane1.getSelectedIndex() == 0) {
            subtotal();
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void field_searchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_searchFocusGained
        // TODO add your handling code here:
        if (field_search.getText().equalsIgnoreCase("Search here. .")) {
            field_search.setText(null);
        }
    }//GEN-LAST:event_field_searchFocusGained

    private void field_searchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_searchFocusLost
        // TODO add your handling code here:
        if (field_search.getText().isEmpty()) {
            field_search.setText("Search here. .");
        }
    }//GEN-LAST:event_field_searchFocusLost

    private void field_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_field_searchKeyReleased
        // TODO add your handling code here:
        populateproductlist("SELECT `Product_No.`, `Short_Description` FROM productlist p where `product_no.` like '%" + field_search.getText() + "%' || `short_description` like '%" + field_search.getText() + "%'");
    }//GEN-LAST:event_field_searchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventory_UserForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventory_UserForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventory_UserForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventory_UserForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Inventory_WarehouseForm dialog = new Inventory_WarehouseForm(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but_add;
    private javax.swing.JButton but_addproduct;
    private javax.swing.JButton but_browse;
    private javax.swing.JButton but_cancel;
    private javax.swing.JButton but_post;
    private javax.swing.JButton but_remove;
    private javax.swing.JButton but_save;
    private javax.swing.JButton but_setsupplier;
    private javax.swing.JButton but_wbrowsesupplier;
    private javax.swing.JButton but_wpback;
    private javax.swing.JButton but_wsback;
    private javax.swing.JComboBox<String> combo_wptype;
    private javax.swing.JComboBox<String> combo_wterm;
    private javax.swing.JTextField field_search;
    private javax.swing.JTextField field_warehouseno;
    private javax.swing.JTextField field_wsearchbarcode;
    private javax.swing.JTextField field_wsupplier;
    private javax.swing.JFormattedTextField field_wta;
    private javax.swing.JFormattedTextField field_wtc;
    private javax.swing.JFormattedTextField field_wtd;
    private javax.swing.JFormattedTextField field_wtv;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel label_totalproduct;
    private javax.swing.JPanel panel_main;
    private javax.swing.JPanel panel_productlist;
    private javax.swing.JPanel panel_supplierlist;
    private javax.swing.JPanel panel_uinfo;
    private javax.swing.JTable productlisttable;
    private javax.swing.JTable producttable;
    private javax.swing.JTable supplierlisttable;
    // End of variables declaration//GEN-END:variables

    private void resetproducttable() {
        producttable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "PRODUCT NO.", "DESCRIPTION", "COST", "# PER", "UNIT", "QTY", "TC", "DC", "VAT", "TOTAL"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, true, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        if (producttable.getColumnModel().getColumnCount() > 0) {
            producttable.getColumnModel().getColumn(0).setMinWidth(120);
            producttable.getColumnModel().getColumn(0).setPreferredWidth(120);
            producttable.getColumnModel().getColumn(1).setMinWidth(180);
            producttable.getColumnModel().getColumn(1).setPreferredWidth(180);
            producttable.getColumnModel().getColumn(2).setResizable(false);
            producttable.getColumnModel().getColumn(2).setPreferredWidth(100);
            producttable.getColumnModel().getColumn(3).setPreferredWidth(180);
            producttable.getColumnModel().getColumn(4).setResizable(false);
            producttable.getColumnModel().getColumn(4).setPreferredWidth(100);
            producttable.getColumnModel().getColumn(5).setResizable(false);
            producttable.getColumnModel().getColumn(5).setPreferredWidth(100);
            producttable.getColumnModel().getColumn(6).setResizable(false);
            producttable.getColumnModel().getColumn(6).setPreferredWidth(100);
            producttable.getColumnModel().getColumn(7).setResizable(false);
            producttable.getColumnModel().getColumn(7).setPreferredWidth(100);
            producttable.getColumnModel().getColumn(8).setResizable(false);
            producttable.getColumnModel().getColumn(8).setPreferredWidth(100);
            producttable.getColumnModel().getColumn(9).setResizable(false);
            producttable.getColumnModel().getColumn(9).setPreferredWidth(180);
        }

        dtm_product = (DefaultTableModel) producttable.getModel();
    }

    private void showselectedproduct(String Product_No) {
        try {
            statement = connection.createStatement();
            System.out.println("SELECT * FROM selected_warehouseproduct s where `Product_No.` = '" + Product_No + "'");
            result = statement.executeQuery("SELECT * FROM selected_warehouseproduct s where `Product_No.` = '" + Product_No + "'");
            if (result.next()) {
//                    "PRODUCT NO.", "DESCRIPTION", "COST", "# PER", "UNIT", "QTY", TC, "DISCNT", "VAT", "TOTAL"
                for (int i = 0; i < producttable.getRowCount(); i++) {
                    if (producttable.getValueAt(i, 1).toString().equalsIgnoreCase(result.getString(2))) {
                        JOptionPane.showMessageDialog(this, "Product already been selected.", "D-TECH IINFORMATION", JOptionPane.INFORMATION_MESSAGE);
                        return;
                    }
                }
                dtm_product.addRow(new Object[]{result.getString(1),
                    result.getString(2),
                    result.getString(3),
                    result.getString(4),
                    result.getString(5),
                    result.getString(6),
                    result.getString(7),
                    result.getString(8),
                    new DecimalFormat("#0.00").format(result.getDouble(9)),
                    new DecimalFormat("#0.00").format(result.getDouble(10))});
            }

            label_totalproduct.setText("Total Product : " + producttable.getRowCount());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void restoreselectedproduct(String Product_No) {
        try {
            statement = connection.createStatement();
            System.out.println("SELECT * FROM get_selectedwarehouseproduct g where `Warehouse_No.` = '" + Warehouse_No + "' and `Product_No.` = '" + Product_No + "'");
            result = statement.executeQuery("SELECT * FROM get_selectedwarehouseproduct g where `Warehouse_No.` = '" + Warehouse_No + "' and `Product_No.` = '" + Product_No + "'");
//            "PRODUCT NO.", "DESCRIPTION", "COST", "# PER", "UNIT", "QTY", "TC", "DC", "VAT", "TOTAL"
//            WP_No., Warehouse_No., Product_No., Description, Cost, Unit, perUnit, Qty, Total_Cost, Discount, Vat, Total_Amount, Datetime_Created, Datetime_Updated, User_ID
            if (result.next()) {
                dtm_product.addRow(new Object[]{result.getString(3),
                    result.getString(4),
                    result.getString(5),
                    result.getString(7),
                    result.getString(6),
                    result.getString(8),
                    result.getString(9),
                    result.getString(10),
                    result.getString(11),
                    result.getString(12)});
            }
            statement.close();
            result.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private boolean validate_field() {
        boolean validate = false;
        validated_fields = "Please check the ff. fields:\n\n";
        if (field_warehouseno.getText().isEmpty()) {
            validated_fields = validated_fields + "* Invalid Input for Warehouse No.\n";
            validate = true;
            return validate;
        }
        if (field_wsupplier.getText().isEmpty()) {
            validated_fields = validated_fields + "* Invalid select a supplier.\n";
            validate = true;
            return validate;
        }
        if (combo_wptype.getSelectedIndex() == 0) {
            validated_fields = validated_fields + "* Invalid Option for Payment Type.\n";
            validate = true;
            return validate;
        }
        if (combo_wterm.getSelectedIndex() == 0) {
            validated_fields = validated_fields + "* Invalid Option for Term.\n";
            validate = true;
            return validate;
        }
        if (producttable.getRowCount() == 0) {
            validated_fields = validated_fields + "* Add a product first.\n";
            validate = true;
            return validate;
        }
        return validate;
    }

    private void clearfield() {
        field_warehouseno.setText(null);
        field_wsupplier.setText(null);
        field_wtc.setText("00.00");
        field_wtd.setText("00.00");
        field_wtv.setText("00.00");
        field_wta.setText("00.00");
        combo_wptype.setSelectedIndex(0);
        combo_wterm.setSelectedIndex(0);

        jTabbedPane1.setSelectedIndex(0);
        jRadioButton1ActionPerformed(null);

        resetproducttable();
    }

    public void restoredata() {
        try {
            Statement statement = connection.createStatement();
//            Warehouse_No., Supplier_No., Supplier, Total_Amount, Total_Discount, Total_Vat, Net_Amount, Payment_type, Terms, Datetime_Created, Datetime_Updated, User_ID, postflag, cancelflag
            ResultSet result = statement.executeQuery("SELECT * FROM warehousedetails_list w where  `Warehouse_No.` = '" + Warehouse_No + "'");
            if (result.next()) {

                Warehouse_No = result.getString(1);
                field_warehouseno.setText(result.getString(1));
                Supplier_No = result.getString(2);
                field_wsupplier.setText(result.getString(3));
                field_wtc.setText(new DecimalFormat("#00.00").format(result.getDouble(4)));
                field_wtd.setText(new DecimalFormat("#00.00").format(result.getDouble(5)));
                field_wtv.setText(new DecimalFormat("#00.00").format(result.getDouble(6)));
                field_wta.setText(new DecimalFormat("#00.00").format(result.getDouble(7)));
                combo_wptype.setSelectedItem(result.getString(8));
                combo_wterm.setSelectedItem(result.getString(9));

                statement.close();

                statement = connection.createStatement();
//                WP_No., Warehouse_No., Product_No., Cost, Unit, Qty, Total_Cost, Discount, Vat, Total_Amount, Datetime_Created, Datetime_Updated, User_ID
                result = statement.executeQuery("SELECT * FROM warehouse_product w where `Warehouse_No.` = '" + Warehouse_No + "'");
                while (result.next()) {
                    restoreselectedproduct(result.getString(3));

                }
                statement.close();
                result.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private String getgeneratedwarehouseno() {
        String generated_no = "";
        try {
            statement = connection.createStatement();
            result = statement.executeQuery("select generate_warehouseno();");
            if (result.next()) {
                generated_no = result.getString(1);
                field_warehouseno.setText(result.getString(1));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return generated_no;
    }

    private void populatesupplierlist(String query) {

//        Supplier_No., Supplier
        supplierlisttable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Supplier No.", "Supplier Name"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        if (supplierlisttable.getColumnModel().getColumnCount() > 0) {
            supplierlisttable.getColumnModel().getColumn(0).setMinWidth(0);
            supplierlisttable.getColumnModel().getColumn(0).setPreferredWidth(0);
            supplierlisttable.getColumnModel().getColumn(0).setMaxWidth(0);
        }
        dtm_supplierlist = (DefaultTableModel) supplierlisttable.getModel();

        try {
            statement = connection.createStatement();
            result = statement.executeQuery(query);
            while (result.next()) {
                dtm_supplierlist.addRow(new Object[]{result.getString(1),
                    result.getString(2)});
            }
            statement.close();
            result.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void populateproductlist(String query) {

//        Supplier_No., Supplier
        productlisttable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Product No.", "Description"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        if (productlisttable.getColumnModel().getColumnCount() > 0) {
            productlisttable.getColumnModel().getColumn(0).setMinWidth(0);
            productlisttable.getColumnModel().getColumn(0).setPreferredWidth(0);
            productlisttable.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        dtm_productlist = (DefaultTableModel) productlisttable.getModel();

        try {
            statement = connection.createStatement();
            result = statement.executeQuery(query);
            while (result.next()) {
                dtm_productlist.addRow(new Object[]{result.getString(1),
                    result.getString(2)});
            }
            statement.close();
            result.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void setEnable(boolean enable) {
        but_post.setVisible(enable);
        but_save.setVisible(enable);
        but_wbrowsesupplier.setVisible(enable);
        but_browse.setVisible(enable);
        field_wsearchbarcode.setVisible(enable);
        but_add.setVisible(enable);
        but_remove.setVisible(enable);

        combo_wptype.setEnabled(enable);
        combo_wterm.setEnabled(enable);
        but_wbrowsesupplier.setEnabled(enable);

        producttable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "PRODUCT NO.", "DESCRIPTION", "COST", "# PER", "UNIT", "QTY", "TC", "DC", "VAT", "TOTAL"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        jScrollPane1.setViewportView(producttable);

        if (producttable.getColumnModel().getColumnCount() > 0) {
            producttable.getColumnModel().getColumn(0).setMinWidth(120);
            producttable.getColumnModel().getColumn(0).setPreferredWidth(120);
            producttable.getColumnModel().getColumn(1).setMinWidth(180);
            producttable.getColumnModel().getColumn(1).setPreferredWidth(180);
            producttable.getColumnModel().getColumn(2).setResizable(false);
            producttable.getColumnModel().getColumn(2).setPreferredWidth(100);
            producttable.getColumnModel().getColumn(3).setMinWidth(100);
            producttable.getColumnModel().getColumn(3).setPreferredWidth(100);
            producttable.getColumnModel().getColumn(4).setResizable(false);
            producttable.getColumnModel().getColumn(4).setPreferredWidth(100);
            producttable.getColumnModel().getColumn(5).setResizable(false);
            producttable.getColumnModel().getColumn(5).setPreferredWidth(100);
            producttable.getColumnModel().getColumn(6).setResizable(false);
            producttable.getColumnModel().getColumn(6).setPreferredWidth(100);
            producttable.getColumnModel().getColumn(7).setResizable(false);
            producttable.getColumnModel().getColumn(7).setPreferredWidth(100);
            producttable.getColumnModel().getColumn(8).setResizable(false);
            producttable.getColumnModel().getColumn(8).setPreferredWidth(100);
            producttable.getColumnModel().getColumn(9).setResizable(false);
            producttable.getColumnModel().getColumn(9).setPreferredWidth(180);
        }

        dtm_product = (DefaultTableModel) producttable.getModel();
    }

    private void subtotal() {
        double cost = 0.0, qty = 0, tc = 0.0, dc = 0.0, vat = 0.0, total = 0.0;
        if (producttable.getRowCount() > 0) {
            System.out.println("Rowcount : " + (producttable.getRowCount()));
            for (int i = 0; i < producttable.getRowCount(); i++) {
                System.out.println("asdsadsadfasfaf");
                cost += Double.parseDouble(producttable.getValueAt(i, 2).toString());
                qty += Double.parseDouble(producttable.getValueAt(i, 5).toString());
                tc += Double.parseDouble(producttable.getValueAt(i, 6).toString());
                dc += Double.parseDouble(producttable.getValueAt(i, 7).toString());
                vat += Double.parseDouble(producttable.getValueAt(i, 8).toString());;
            }

            total += (tc + vat);
        }
        field_wtc.setText(new DecimalFormat("#00.00").format(tc) + " ");
        field_wtd.setText(new DecimalFormat("#00.00").format(dc) + " ");
        field_wtv.setText(new DecimalFormat("#00.00").format(vat) + " ");
        field_wta.setText(new DecimalFormat("#00.00").format(total) + " ");
    }
}
