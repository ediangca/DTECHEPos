/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory.form;

import inventory.Inventory_UserSettings;

import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.*;

/**
 *
 * @author Administrator
 */
public class Inventory_UserForm extends javax.swing.JDialog {

    /**
     * Creates new form Inventory_ProductForm
     */
    Inventory_UserSettings inventory_usersettings;
    String validated_fields = "Please check the ff. fields:\n\n";

    Connection connection = null;
    Statement statement;
    ResultSet result;

    String User_ID = "", Company_No = "101", Profile_No = "1";

    public Inventory_UserForm(java.awt.Frame parent, boolean modal, Inventory_UserSettings inventory_usersettings) {
        super(parent, modal);
        initComponents();
        this.inventory_usersettings = inventory_usersettings;
        this.connection = inventory_usersettings.connection;
        setLocationRelativeTo(parent);
        populatedate();
        populatedepartmentposition();
    }

    public Inventory_UserForm(java.awt.Frame parent, boolean modal, Inventory_UserSettings inventory_usersettings, String User_ID) {
        super(parent, modal);
        initComponents();
        this.inventory_usersettings = inventory_usersettings;
        this.connection = inventory_usersettings.connection;
        this.User_ID = User_ID;
        populatedate();
        populatedepartmentposition();

        but_save.setText("UPDATE");
        field_userID.setText(User_ID);
        field_userID.setEnabled(false);
        field_uusername.setEnabled(false);
        field_upassword.setEnabled(false);
        field_upassword1.setEnabled(false);
        setLocationRelativeTo(parent);
    }

    public void setEnableallComponent(boolean enable) {
        field_userID.setEnabled(enable);
        field_ulastname.setEnabled(enable);
        field_ufirstname.setEnabled(enable);
        field_umiddlename.setEnabled(enable);
        combo_usex.setEnabled(enable);
        combo_uyear.setEnabled(enable);
        combo_umonth.setEnabled(enable);
        combo_uday.setEnabled(enable);
        field_uaddress.setEnabled(enable);
        combo_uisactive.setEnabled(enable);
        field_ucontactno.setEnabled(enable);
        field_uemail.setEnabled(enable);
        combo_udepartment.setEnabled(enable);
        combo_uposition.setEnabled(enable);
        field_uusername.setEnabled(enable);
        field_upassword.setEnabled(enable);
        field_upassword1.setEnabled(enable);
        but_save.setVisible(enable);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_uaccess = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_uprivellege = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        but_post = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        but_save = new javax.swing.JButton();
        but_cancel = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panel_uinfo = new javax.swing.JPanel();
        field_userID = new javax.swing.JTextField();
        combo_usex = new javax.swing.JComboBox<>();
        combo_umonth = new javax.swing.JComboBox<>();
        combo_uisactive = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        field_uaddress = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        combo_uday = new javax.swing.JComboBox<>();
        combo_uyear = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        field_ufirstname = new javax.swing.JTextField();
        field_ulastname = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        field_umiddlename = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        panel_usecurity = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        field_uusername = new javax.swing.JTextField();
        field_upassword = new javax.swing.JPasswordField();
        jLabel16 = new javax.swing.JLabel();
        field_upassword1 = new javax.swing.JPasswordField();
        jLabel14 = new javax.swing.JLabel();
        field_ucontactno = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        field_uemail = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        combo_uposition = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        combo_udepartment = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        combo_ucompany = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();

        panel_uaccess.setOpaque(false);

        table_uprivellege.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(table_uprivellege);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Select Privellege you want to override access by this user.");

        javax.swing.GroupLayout panel_uaccessLayout = new javax.swing.GroupLayout(panel_uaccess);
        panel_uaccess.setLayout(panel_uaccessLayout);
        panel_uaccessLayout.setHorizontalGroup(
            panel_uaccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_uaccessLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_uaccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel_uaccessLayout.setVerticalGroup(
            panel_uaccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_uaccessLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE))
        );

        but_post.setText("POST");
        but_post.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_postActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("USER FORM");
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(204, 204, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 0));
        jLabel1.setText("USER FORM");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 0));

        but_save.setText("SAVE");
        but_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_saveActionPerformed(evt);
            }
        });

        but_cancel.setText("CLOSE");
        but_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(but_save, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(but_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(but_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(but_save, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        panel_uinfo.setBackground(new java.awt.Color(255, 255, 255));

        field_userID.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        combo_usex.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT", "MALE", "FEMALE" }));
        combo_usex.setBorder(null);
        combo_usex.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        combo_umonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MONTH", "JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER" }));
        combo_umonth.setBorder(null);
        combo_umonth.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        combo_umonth.setEnabled(false);
        combo_umonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_umonthActionPerformed(evt);
            }
        });

        combo_uisactive.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT", "YES", "NO" }));
        combo_uisactive.setBorder(null);
        combo_uisactive.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Birthdate");

        jScrollPane1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        field_uaddress.setColumns(20);
        field_uaddress.setRows(5);
        field_uaddress.setBorder(null);
        jScrollPane1.setViewportView(field_uaddress);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Address");

        combo_uday.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DAY" }));
        combo_uday.setBorder(null);
        combo_uday.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        combo_uday.setEnabled(false);

        combo_uyear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YEAR" }));
        combo_uyear.setBorder(null);
        combo_uyear.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        combo_uyear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_uyearActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Sex");

        field_ufirstname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        field_ulastname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Firstname");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("User ID.");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Middlename");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Lastname");

        field_umiddlename.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Is Active");

        javax.swing.GroupLayout panel_uinfoLayout = new javax.swing.GroupLayout(panel_uinfo);
        panel_uinfo.setLayout(panel_uinfoLayout);
        panel_uinfoLayout.setHorizontalGroup(
            panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_uinfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_uinfoLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))
                    .addGroup(panel_uinfoLayout.createSequentialGroup()
                        .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_uinfoLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(field_userID))
                            .addGroup(panel_uinfoLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(field_ulastname))
                            .addGroup(panel_uinfoLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(combo_usex, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(4, 4, 4))
                    .addGroup(panel_uinfoLayout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(field_ufirstname)
                        .addContainerGap())
                    .addGroup(panel_uinfoLayout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(field_umiddlename))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_uinfoLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combo_uisactive, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panel_uinfoLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combo_uyear, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combo_umonth, 0, 109, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combo_uday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        panel_uinfoLayout.setVerticalGroup(
            panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_uinfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(field_userID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(field_ulastname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(field_ufirstname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(field_umiddlename, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_usex, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_uday, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_uyear, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_umonth, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_uinfoLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panel_uinfoLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(panel_uinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_uisactive, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabbedPane1.addTab("USER INFORMATION", panel_uinfo);

        panel_usecurity.setOpaque(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("USERNAME");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("PASSWORD");

        field_uusername.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        field_upassword.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("RE-TYPE");

        field_upassword1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Contact No.");

        field_ucontactno.setForeground(new java.awt.Color(153, 153, 153));
        field_ucontactno.setText("optional");
        field_ucontactno.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        field_ucontactno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                field_ucontactnoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                field_ucontactnoFocusLost(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Email");

        field_uemail.setForeground(new java.awt.Color(153, 153, 153));
        field_uemail.setText("optional");
        field_uemail.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        field_uemail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                field_uemailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                field_uemailFocusLost(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Position");

        combo_uposition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT" }));
        combo_uposition.setBorder(null);
        combo_uposition.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Department");

        combo_udepartment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT" }));
        combo_udepartment.setBorder(null);
        combo_udepartment.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        jPanel4.setBackground(new java.awt.Color(153, 153, 0));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("SECURITY");

        jLabel19.setBackground(new java.awt.Color(204, 51, 0));
        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText(" Lower case  is a matter.");
        jLabel19.setOpaque(true);

        jLabel20.setBackground(new java.awt.Color(204, 51, 0));
        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Note: This is case sensitive means Upper and");
        jLabel20.setOpaque(true);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel20)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel19))
        );

        combo_ucompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT" }));
        combo_ucompany.setBorder(null);
        combo_ucompany.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        combo_ucompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_ucompanyActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Company");

        javax.swing.GroupLayout panel_usecurityLayout = new javax.swing.GroupLayout(panel_usecurity);
        panel_usecurity.setLayout(panel_usecurityLayout);
        panel_usecurityLayout.setHorizontalGroup(
            panel_usecurityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_usecurityLayout.createSequentialGroup()
                .addGroup(panel_usecurityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_usecurityLayout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(field_ucontactno))
                    .addGroup(panel_usecurityLayout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(field_uemail))
                    .addGroup(panel_usecurityLayout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combo_uposition, 0, 259, Short.MAX_VALUE))
                    .addGroup(panel_usecurityLayout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combo_udepartment, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panel_usecurityLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panel_usecurityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_usecurityLayout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(field_upassword1))
                            .addGroup(panel_usecurityLayout.createSequentialGroup()
                                .addGroup(panel_usecurityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panel_usecurityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(field_uusername)
                                    .addComponent(field_upassword)))))
                    .addGroup(panel_usecurityLayout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combo_ucompany, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panel_usecurityLayout.setVerticalGroup(
            panel_usecurityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_usecurityLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_usecurityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(field_ucontactno, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_usecurityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(field_uemail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_usecurityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_ucompany, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel_usecurityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_uposition, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_usecurityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_udepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_usecurityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel_usecurityLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                    .addComponent(field_uusername, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_usecurityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field_upassword, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_usecurityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field_upassword1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("OTHERS & SECURITY", panel_usecurity);
        panel_usecurity.setVisible(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void but_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_cancelActionPerformed
        // TODO add your handling code here:
        if (!but_save.isVisible()) {
            dispose();
            return;
        }
        int x = JOptionPane.showConfirmDialog(this, "Do you really want to cancel adding/updating user?", "CONFIRMATION", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (x == JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_but_cancelActionPerformed

    private void but_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_saveActionPerformed
        // TODO add your handling code here:

        if (validate_field()) {
            JOptionPane.showConfirmDialog(this, validated_fields, "D-TECH WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.WARNING_MESSAGE);
            return;
        }

        boolean active = true;
        if (combo_uisactive.getSelectedIndex() > 1) {
            active = false;
        }
        try {
            if (but_save.getText().equalsIgnoreCase("save")) {

                statement = connection.createStatement();
//              User_ID, Username, Password, Company_No., Profile_No., isActive, DatetimeCreated, Datetime_Updated, cancelflag
                System.out.println("Saving User Account...");
                System.out.println("insert into `user` values('"
                        + field_userID.getText() + "','"
                        + field_uusername.getText() + "', AES_ENCRYPT('"
                        + field_upassword.getText() + "',9),'"
                        + Company_No + "','"
                        + ("PROF-" + field_userID.getText()) + "'," + active + ",'"
                        + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "','"
                        + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "', 0)");
                statement.executeUpdate("insert into `user` values('"
                        + field_userID.getText() + "','"
                        + field_uusername.getText() + "', AES_ENCRYPT('"
                        + field_upassword.getText() + "',9),'"
                        + Company_No + "','"
                        + ("PROF-" + field_userID.getText()) + "'," + active + ",'"
                        + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "','"
                        + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "', 0,')");

                statement.close();
                statement = connection.createStatement();
//              Profile_No., Lastname, Firstname, Middlename, Sex, Birthday, Address, Email, Contact_No., Position_No., Department_No., Datetime_Created, Datetime_Updated
                System.out.println("Saving User Profile...");
                statement.executeUpdate("insert into `user_profile` values('"
                        + ("PROF-" + field_userID.getText()) + "','"
                        + field_ulastname.getText() + "','"
                        + field_ufirstname.getText() + "','"
                        + field_umiddlename.getText() + "','"
                        + combo_usex.getSelectedItem().toString() + "','"
                        + (combo_uyear.getSelectedItem().toString() + "-" + combo_umonth.getSelectedIndex() + "-" + combo_uday.getSelectedItem().toString()) + "','"
                        + field_uaddress.getText().trim() + "','"
                        + field_uemail.getText() + "','"
                        + field_ucontactno.getText() + "','"
                        + getpositionNo(combo_uposition.getSelectedItem().toString()) + "','"
                        + getdepartmentNo(combo_udepartment.getSelectedItem().toString()) + "','"
                        + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "','"
                        + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "','"
                        + field_userID.getText() + "')");

                JOptionPane.showConfirmDialog(this, "User Successfully Added!", "D-TECH INFORMATION", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);

            } else {
//                statement = connection.createStatement();
////              User_ID, Username, Password, Company_No., Profile_No., isActive, Datetime_Created, Datetime_Updated
//                System.out.println("Updating User Account...");
//                statement.executeUpdate("update`user` set username = '"
//                        + field_uusername.getText() + "', password = '"
//                        + field_upassword.getText() + "', `company_no.` = '"
//                        + Company_No + "', isactive = "
//                        + active + ", datetime_updated = '"
//                        + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "')");
//
//                statement.close();
                statement = connection.createStatement();
//              Profile_No., Lastname, Firstname, Middlename, Sex, Birthday, Address, Email, Contact_No., Position_No., Department_No., Datetime_Created, Datetime_Updated
                System.out.println("Updating User Profile...");
                statement.executeUpdate("update `user_profile` set lastname = '"
                        + field_ulastname.getText() + "', firstname = '"
                        + field_ufirstname.getText() + "', middlename = '"
                        + field_umiddlename.getText() + "', sex = '"
                        + combo_usex.getSelectedItem().toString() + "', birthday = '"
                        + (combo_uyear.getSelectedItem().toString() + "-" + combo_umonth.getSelectedIndex() + "-" + combo_uday.getSelectedItem().toString()) + "', address = '"
                        + field_uaddress.getText().trim() + "', email = '"
                        + field_uemail.getText() + "', `contact_no.` = '"
                        + field_ucontactno.getText() + "', `position_no.` = '"
                        + getpositionNo(combo_uposition.getSelectedItem().toString()) + "', `department_no.` = '"
                        + getdepartmentNo(combo_udepartment.getSelectedItem().toString()) + "', datetime_updated = '"
                        + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "' where `Profile_No.` = '" + Profile_No + "'");

                JOptionPane.showConfirmDialog(this, "User Successfully Updated!", "D-TECH INFORMATION", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);

                dispose();

            }

            clearfield();
            statement.close();
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(this, e.getMessage(), "D-TECH WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            dispose();
        }
        inventory_usersettings.showQuery("SELECT * FROM userlist ul");
    }//GEN-LAST:event_but_saveActionPerformed

    private void field_ucontactnoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_ucontactnoFocusGained
        // TODO add your handling code here:
        if (field_ucontactno.getText().equals("optional")) {
            field_ucontactno.setText(null);
            field_ucontactno.setForeground(new java.awt.Color(0, 0, 0));
        }
    }//GEN-LAST:event_field_ucontactnoFocusGained

    private void field_ucontactnoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_ucontactnoFocusLost
        // TODO add your handling code here:
        if (field_ucontactno.getText().isEmpty()) {
            field_ucontactno.setText("optional");
            field_ucontactno.setForeground(new java.awt.Color(153, 153, 153));
        } else {
            field_ucontactno.setForeground(new java.awt.Color(0, 0, 0));
        }
    }//GEN-LAST:event_field_ucontactnoFocusLost

    private void field_uemailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_uemailFocusGained
        // TODO add your handling code here:
        if (field_uemail.getText().equals("optional")) {
            field_uemail.setText(null);
            field_uemail.setForeground(new java.awt.Color(0, 0, 0));
        }
    }//GEN-LAST:event_field_uemailFocusGained

    private void field_uemailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_uemailFocusLost
        // TODO add your handling code here:
        if (field_uemail.getText().isEmpty()) {
            field_uemail.setText("optional");
            field_uemail.setForeground(new java.awt.Color(153, 153, 153));
        } else {
            field_uemail.setForeground(new java.awt.Color(0, 0, 0));
        }
    }//GEN-LAST:event_field_uemailFocusLost

    private void but_postActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_postActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_but_postActionPerformed

    private void combo_uyearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_uyearActionPerformed
        // TODO add your handling code here:
        if (combo_uyear.getSelectedIndex() <= 0) {
            combo_uday.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"DAY"}));
            combo_umonth.setSelectedIndex(0);
            combo_uday.setSelectedIndex(0);

            combo_umonth.setEnabled(false);
            combo_uday.setEnabled(false);
        } else {

            combo_umonth.setEnabled(true);

            if (combo_umonth.getSelectedIndex() == 0) {
                combo_uday.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"DAY"}));
                combo_uday.setSelectedIndex(0);
                combo_uday.setEnabled(false);
            } else {
                combo_uday.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"DAY"}));
                combo_uday.setEnabled(true);
//                System.out.println("GetLastDayOf >>> " + getLastDayOf(combo_umonth.getSelectedIndex(), ((int) Integer.parseInt(combo_uyear.getSelectedItem().toString()))));
                for (int i = 1; i < getLastDayOf(combo_umonth.getSelectedIndex(), ((int) Integer.parseInt(combo_uyear.getSelectedItem().toString()))) + 1; i++) {
                    combo_uday.addItem(i + "");
                }
            }
        }
    }//GEN-LAST:event_combo_uyearActionPerformed

    private void combo_umonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_umonthActionPerformed
        // TODO add your handling code here:
        combo_uyearActionPerformed(evt);
    }//GEN-LAST:event_combo_umonthActionPerformed

    private void combo_ucompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_ucompanyActionPerformed
        // TODO add your handling code here:
        try {
            if (combo_ucompany.getSelectedIndex() > 0) {
                statement = connection.createStatement();
                result = statement.executeQuery("select `company_no.` from company where concat(`company_no.`,'-',company_name) = '" + combo_ucompany.getSelectedItem() + "'");
                if(result.next()){
                    Company_No = result.getString(1);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_combo_ucompanyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventory_UserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventory_UserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventory_UserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventory_UserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Inventory_UserForm dialog = new Inventory_UserForm(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but_cancel;
    private javax.swing.JButton but_post;
    private javax.swing.JButton but_save;
    private javax.swing.JComboBox<String> combo_ucompany;
    private javax.swing.JComboBox<String> combo_uday;
    private javax.swing.JComboBox<String> combo_udepartment;
    private javax.swing.JComboBox<String> combo_uisactive;
    private javax.swing.JComboBox<String> combo_umonth;
    private javax.swing.JComboBox<String> combo_uposition;
    private javax.swing.JComboBox<String> combo_usex;
    private javax.swing.JComboBox<String> combo_uyear;
    private javax.swing.JTextArea field_uaddress;
    private javax.swing.JTextField field_ucontactno;
    private javax.swing.JTextField field_uemail;
    private javax.swing.JTextField field_ufirstname;
    private javax.swing.JTextField field_ulastname;
    private javax.swing.JTextField field_umiddlename;
    private javax.swing.JPasswordField field_upassword;
    private javax.swing.JPasswordField field_upassword1;
    private javax.swing.JTextField field_userID;
    private javax.swing.JTextField field_uusername;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel panel_uaccess;
    private javax.swing.JPanel panel_uinfo;
    private javax.swing.JPanel panel_usecurity;
    private javax.swing.JTable table_uprivellege;
    // End of variables declaration//GEN-END:variables

    private boolean validate_field() {
        boolean validate = false;
        validated_fields = "Please check the ff. fields:\n\n";
        if (field_userID.getText().isEmpty()) {
            validated_fields = validated_fields + "* Invalid or Existing User ID.\n";
            validate = true;
            return validate;
        }
        if (field_ulastname.getText().isEmpty()) {
            validated_fields = validated_fields + "* Invalid Input for Lastname.\n";
            validate = true;
            return validate;
        }
        if (field_ufirstname.getText().isEmpty()) {
            validated_fields = validated_fields + "* Invalid Input for Firsname.\n";
            validate = true;
            return validate;
        }
        if (field_umiddlename.getText().isEmpty()) {
            validated_fields = validated_fields + "* Invalid Input for Middlename.\n";
            validate = true;
            return validate;
        }
        if (combo_usex.getSelectedIndex() == 0) {
            validated_fields = validated_fields + "* Select a Sex.\n";
            validate = true;
            return validate;
        }
        if (combo_uyear.getSelectedIndex() == 0) {
            validated_fields = validated_fields + "* Select a Birthyear.\n";
            validate = true;
            return validate;
        }
        if (combo_umonth.getSelectedIndex() == 0) {
            validated_fields = validated_fields + "* Select a Birthmonth.\n";
            validate = true;
            return validate;
        }
        if (combo_uday.getSelectedIndex() == 0) {
            validated_fields = validated_fields + "* Select a Birthday.\n";
            validate = true;
            return validate;
        }
        if (field_uaddress.getText().isEmpty()) {
            validated_fields = validated_fields + "* Invalid Input for Address.\n";
            validate = true;
            return validate;
        }
        if (combo_uisactive.getSelectedIndex() == 0) {
            validated_fields = validated_fields + "* Select Status option.\n";
            validate = true;
            return validate;
        }
        if (field_ucontactno.getText().isEmpty()) {
            validated_fields = validated_fields + "* Invalid Input for Description.\n";
            validate = true;
            return validate;
        }
        if (field_uemail.getText().isEmpty()) {
            validated_fields = validated_fields + "* Invalid Input for Description.\n";
            validate = true;
            return validate;
        }
        if (field_uusername.getText().isEmpty()) {
            validated_fields = validated_fields + "* Invalid Input for Username.\n";
            validate = true;
            return validate;
        }
        if (combo_ucompany.getSelectedIndex() == 0) {
            validated_fields = validated_fields + "* Select a Company.\n";
            validate = true;
            return validate;
        }
        if (combo_udepartment.getSelectedIndex() == 0) {
            validated_fields = validated_fields + "* Select a Department.\n";
            validate = true;
            return validate;
        }
        if (combo_uposition.getSelectedIndex() == 0) {
            validated_fields = validated_fields + "* Select a Position.\n";
            validate = true;
            return validate;
        }
        if (field_upassword.getText().isEmpty()) {
            validated_fields = validated_fields + "* Invalid Input for Password.\n";
            validate = true;
            return validate;
        }
        if (field_upassword1.getText().isEmpty()) {
            validated_fields = validated_fields + "* Invalid Input for Retype Password.\n";
            validate = true;
            return validate;
        }
//        System.out.println(field_upassword.getText() + ".compareTo(" + field_upassword1.getText() + ")");
//        System.out.println((field_upassword.getText().compareTo(field_upassword1.getText()) == 0));

        if ((field_upassword.getText().compareTo(field_upassword1.getText()) == 1)) {
            validated_fields = validated_fields + "* Unmatched Retype Password.\n";
            validate = true;
            return validate;
        }

        try {
            System.out.println(field_ulastname.getText() + ", " + field_ufirstname.getText() + " " + field_umiddlename.getText().substring(0, 1));
            String Fullname = (field_ulastname.getText() + ", " + field_ufirstname.getText() + " " + field_umiddlename.getText().substring(0, 1));

            if (but_save.getText().equalsIgnoreCase("update")) {
                statement = connection.createStatement();
                System.out.println(">>> SELECT u.USER_ID, u.Fullname, ud.Lastname, u.Department, u.Position, u.Datetime_Created, u.Datetime_Updated FROM userlist u join userdetails_list ud on u.user_ID = ud.user_ID "
                        + " where u.Fullname = '" + Fullname + "' or ud.Lastname = '" + field_ulastname.getText() + "' group by u.User_ID having u.USER_ID not in ( '" + field_userID.getText() + "')");
                result = statement.executeQuery("SELECT u.USER_ID, u.Fullname, ud.Lastname, u.Department, u.Position, u.Datetime_Created, u.Datetime_Updated FROM userlist u join userdetails_list ud on u.user_ID = ud.user_ID "
                        + " where u.Fullname = '" + Fullname + "' or ud.Lastname = '" + field_ulastname.getText() + "' group by u.User_ID having u.USER_ID not in ( '" + field_userID.getText() + "')");

                if (result.next()) {
                    if (result.getString(2).equalsIgnoreCase(Fullname)) {
                        validated_fields = validated_fields + "* User already exist base to Fullname.\n";
                        validate = true;
                    }
                    if (result.getString(3).equalsIgnoreCase(field_ulastname.getText())) {
                        validated_fields = validated_fields + "* User lastname already exist.\n";
                        validate = true;
                    }
                }
                statement.close();
                result.close();

            } else {
                //Check for Existing record
                statement = connection.createStatement();
                result = statement.executeQuery("SELECT USER_ID, Fullname, Department, Position, Datetime_Created, Datetime_Updated FROM userlist u "
                        + " where USER_ID = '" + field_userID.getText() + "' or Fullname = '" + Fullname + "'");

                if (result.next()) {
                    if (result.getString(1).equalsIgnoreCase(field_userID.getText())) {
                        validated_fields = validated_fields + "* User ID already exist.\n";
                        validate = true;
                    }
                    if (result.getString(2).equalsIgnoreCase(Fullname)) {
                        validated_fields = validated_fields + "* User already exist base to Fullname.\n";
                        validate = true;
                    }
                }
                statement.close();
                result.close();

                statement = connection.createStatement();
                result = statement.executeQuery("SELECT `username` FROM `user` "
                        + " where username = '" + field_uusername.getText() + "'");

                if (result.next()) {
                    validated_fields = validated_fields + "* Username already exist.\n";
                    validate = true;
                }
                statement.close();
                result.close();
            }
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(this, e.getMessage(), "D-TECH WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.WARNING_MESSAGE);
            e.printStackTrace();
        }

        return validate;
    }

    private void clearfield() {
        field_userID.setText(null);
        field_ulastname.setText(null);
        field_ufirstname.setText(null);
        field_umiddlename.setText(null);
        field_uaddress.setText(null);

        field_ucontactno.setText(null);
        field_uemail.setText(null);
        field_uusername.setText(null);
        field_upassword.setText(null);
        field_upassword1.setText(null);

        combo_usex.setSelectedIndex(0);
        combo_uyear.setSelectedIndex(0);

//        combo_umonth.setSelectedIndex(0);
//        combo_uday.setSelectedIndex(0);
//        combo_umonth.setEnabled(false);
//        combo_uday.setEnabled(false);
        combo_uposition.setSelectedIndex(0);
        combo_udepartment.setSelectedIndex(0);

        combo_uisactive.setSelectedIndex(0);

        jTabbedPane1.setSelectedIndex(0);
    }

    private void populatedate() {

        int yearnow = (int) Integer.parseInt(new SimpleDateFormat("yyyy").format(new Date()));

        combo_uyear.removeAllItems();
        combo_uyear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"YEAR"}));

        for (int i = (yearnow - 61); i <= (yearnow - 18); i++) {
            combo_uyear.addItem(i + "");
        }
        combo_uyear.setSelectedIndex(0);

    }

    public static int getLastDayOf(int month, int year) {
//        System.out.println("getLastDayOf month : " + month + " year : " + year);
//        System.out.println("April : " + Calendar.APRIL);
//        System.out.println("JUN : " + Calendar.APRIL);
//        System.out.println("SEPTEMBER : " + Calendar.SEPTEMBER);
//        System.out.println("NOVEMBER : " + Calendar.NOVEMBER);
        switch (month) {
            case 4:
            case 6:
            case 9:
            case 11:
                return 30;
            case 2:
                if (year % 4 == 0) {
                    return 29;
                }
                return 28;
            default:
                return 31;
        }
    }

    private void populatedepartmentposition() {
        try {
            combo_ucompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"SELECT"}));

            statement = connection.createStatement();
            result = statement.executeQuery("select concat(`company_no.`,'-',company_name)as company from company where isActive = 1 and company_name not like '%DTECH SOLUTIONS%';");
            while (result.next()) {
                combo_ucompany.addItem(result.getString(1));
            }
            statement.close();
            result.close();
            combo_udepartment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"SELECT"}));

            statement = connection.createStatement();
            result = statement.executeQuery("select `department` from user_department where isActive = 1;");
            while (result.next()) {
                combo_udepartment.addItem(result.getString(1));
            }
            statement.close();
            result.close();

            combo_uposition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"SELECT"}));
            statement = connection.createStatement();
            result = statement.executeQuery("select `position` from user_position where isActive = 1;");
            while (result.next()) {
                combo_uposition.addItem(result.getString(1));
            }
            statement.close();
            result.close();

            restoredata();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private String getpositionNo(String position) {
        String positionNo = "";
        try {
            Statement statement1 = connection.createStatement();
            ResultSet result1 = statement1.executeQuery("select `Position_No.` from user_position where `position` = '" + position + "'");
            if (result1.next()) {
                positionNo = result1.getString(1);
            }
            statement1.close();
            result1.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return positionNo;
    }

    private String getdepartmentNo(String department) {
        String departmentNo = "";
        try {
            Statement statement1 = connection.createStatement();
            ResultSet result1 = statement1.executeQuery("select `Department_No.` from user_department where `department` = '" + department + "'");
            if (result1.next()) {
                departmentNo = result1.getString(1);
            }
            statement1.close();
            result1.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return departmentNo;
    }

    public void restoredata() {
        try {
            Statement statement1 = connection.createStatement();
//          User_ID, Username, Password, uia, udtc, udtu, cancelflag, 7
//          Company_No., Company_Name, Owner, CContact_No, Email_Address, CAddress, Logo, cia, cdtc, cdtu, 17
//          Profile_No., Lastname, Firstname, Middlename, Sex, Birthday, PAddress, Email, PContact_No, pdtc, pdtu, 28
//          Department_No., Department, dia, ddtc, ddtu, 33
//          Position_No., Position, pia, psdtc, psdtu 38
            ResultSet result1 = statement1.executeQuery("SELECT * FROM userdetails_list u where user_id = '" + User_ID + "'");
            if (result1.next()) {
                field_uusername.setText(result1.getString(2));
                field_upassword.setText(result1.getString(3));
                field_upassword1.setText(result1.getString(3));

                if (result1.getBoolean(4)) {
                    combo_uisactive.setSelectedIndex(1);
                } else {
                    combo_uisactive.setSelectedIndex(2);
                }
                Company_No = result1.getString(8);

                Profile_No = result1.getString(18);
                field_ulastname.setText(result1.getString(19));
                field_ufirstname.setText(result1.getString(20));
                field_umiddlename.setText(result1.getString(21));
                combo_usex.setSelectedItem(result1.getString(22));

                combo_uyear.setSelectedItem(new SimpleDateFormat("yyyy").format(result1.getDate(23)));
                combo_umonth.setSelectedIndex((int) Integer.parseInt(new SimpleDateFormat("MM").format(result1.getDate(23))));

                for (int i = 1; i < getLastDayOf(combo_umonth.getSelectedIndex(), ((int) Integer.parseInt(new SimpleDateFormat("yyyy").format(result1.getDate(23))))) + 1; i++) {
                    combo_uday.addItem(i + "");
                }

                combo_uday.setSelectedIndex((int) Integer.parseInt(new SimpleDateFormat("dd").format(result1.getDate(23))));

                field_uaddress.setText(result1.getString(24));
                field_uemail.setText(result1.getString(25));
                field_ucontactno.setText(result1.getString(26));

                combo_udepartment.setSelectedItem(result1.getString(30));
                combo_uposition.setSelectedItem(result1.getString(35));

                statement1.close();
                result1.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
