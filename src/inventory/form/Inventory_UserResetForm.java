/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory.form;

import inventory.Inventory_Mainframe;
import inventory.Inventory_UserSettings;

import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.*;

/**
 *
 * @author Administrator
 */
public class Inventory_UserResetForm extends javax.swing.JDialog {

    /**
     * Creates new form Inventory_ProductForm
     */
    Inventory_UserSettings inventory_usersettings;
    String validated_fields = "Please check the ff. fields:\n\n";

    Connection connection = null;
    Statement statement;
    ResultSet result;

    String User_ID = "", Company_No = "101", Profile_No = "1", passwordold = "";

    public Inventory_UserResetForm(java.awt.Frame parent, boolean modal, Inventory_UserSettings inventory_usersettings, String User_ID) {
        super(parent, modal);
        initComponents();
        this.inventory_usersettings = inventory_usersettings;
        this.connection = inventory_usersettings.connection;
        this.User_ID = User_ID;

        setLocationRelativeTo(parent);

        restoredata();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_uaccess = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_uprivellege = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panel_usecurity = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        but_save = new javax.swing.JButton();
        but_cancel = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        field_upasswordnew = new javax.swing.JPasswordField();
        jLabel16 = new javax.swing.JLabel();
        field_upasswordnew1 = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        field_upasswordold = new javax.swing.JPasswordField();
        jLabel21 = new javax.swing.JLabel();
        field_uusername = new javax.swing.JLabel();

        panel_uaccess.setOpaque(false);

        table_uprivellege.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(table_uprivellege);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Select Privellege you want to override access by this user.");

        javax.swing.GroupLayout panel_uaccessLayout = new javax.swing.GroupLayout(panel_uaccess);
        panel_uaccess.setLayout(panel_uaccessLayout);
        panel_uaccessLayout.setHorizontalGroup(
            panel_uaccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_uaccessLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_uaccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel_uaccessLayout.setVerticalGroup(
            panel_uaccessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_uaccessLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE))
        );

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        panel_usecurity.setOpaque(false);

        javax.swing.GroupLayout panel_usecurityLayout = new javax.swing.GroupLayout(panel_usecurity);
        panel_usecurity.setLayout(panel_usecurityLayout);
        panel_usecurityLayout.setHorizontalGroup(
            panel_usecurityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 390, Short.MAX_VALUE)
        );
        panel_usecurityLayout.setVerticalGroup(
            panel_usecurityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 385, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("OTHERS & SECURITY", panel_usecurity);
        panel_usecurity.setVisible(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(204, 204, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 0));
        jLabel1.setText("USER RESET FORM");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 0));

        but_save.setText("RESET");
        but_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_saveActionPerformed(evt);
            }
        });

        but_cancel.setText("CLOSE");
        but_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(but_save, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(but_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(but_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(but_save, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("NEW PASSWORD");

        field_upasswordnew.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("RE-TYPE");

        field_upasswordnew1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("USERNAME");

        jLabel19.setBackground(new java.awt.Color(204, 51, 0));
        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText(" Lower case  is a matter.");
        jLabel19.setOpaque(true);

        jLabel20.setBackground(new java.awt.Color(204, 51, 0));
        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Note: This is case sensitive means Upper and");
        jLabel20.setOpaque(true);

        field_upasswordold.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Old PASSWORD");

        field_uusername.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        field_uusername.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(field_upasswordnew1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(field_upasswordnew)
                            .addComponent(field_uusername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(field_upasswordold)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field_uusername, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field_upasswordold, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field_upasswordnew, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field_upasswordnew1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void but_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_cancelActionPerformed
        // TODO add your handling code here:
        if (!but_save.isVisible()) {
            dispose();
            return;
        }
        int x = JOptionPane.showConfirmDialog(this, "Do you really want to cancel adding/updating user?", "CONFIRMATION", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (x == JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_but_cancelActionPerformed

    private void but_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_saveActionPerformed
        // TODO add your handling code here:

        if (validate_field()) {
            JOptionPane.showConfirmDialog(this, validated_fields, "D-TECH WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.WARNING_MESSAGE);
            return;
        }

        boolean active = false;
        try {
            statement = connection.createStatement();
//              User_ID, Username, Password, Company_No., Profile_No., isActive, Datetime_Created, Datetime_Updated
            System.out.println("Updating User Account...");
            statement.executeUpdate("update`user` set password = AES_ENCRYPT('"
                    + field_upasswordnew.getText() + "',9), isactive = "
                    + active + ", datetime_updated = '"
                    + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()) + "' where user_id = '" + User_ID + "'");

            statement.close();
//            UserReset_No., User_ID, Old_Password, New_Password, Datetime_Created, Resetby_User_ID
            statement = connection.createStatement();
            System.out.println("insert into user_reset_history values('" + (new SimpleDateFormat("yyyyMMddHHmmss").format(new Date())
                    + User_ID) + "','"
                    + User_ID + "',AES_ENCRYPT('"
                    + passwordold + "',9), AES_ENCRYPT('"
                    + field_upasswordnew.getText() + "',9),'"
                    + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()) + "','"
                    + inventory_usersettings.inventory_mainframe.userID + "')");
            statement.executeUpdate("insert into user_reset_history values('" + (new SimpleDateFormat("yyyyMMddHHmmss").format(new Date())
                    + User_ID) + "','"
                    + User_ID + "',AES_ENCRYPT('"
                    + passwordold + "',9), AES_ENCRYPT('"
                    + field_upasswordnew.getText() + "',9),'"
                    + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()) + "','"
                    + inventory_usersettings.inventory_mainframe.userID + "')");

            statement.close();
            JOptionPane.showConfirmDialog(this, "User Credential has been successfully reseted. \n\n Please re-enable the user after.", "INFORMATION", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);

            inventory_usersettings.showQuery("SELECT * FROM userlist ul");
            dispose();

        } catch (Exception e) {
            JOptionPane.showConfirmDialog(this, e.getMessage(), "D-TECH WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            dispose();
        }

        clearfield();
    }//GEN-LAST:event_but_saveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventory_UserResetForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventory_UserResetForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventory_UserResetForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventory_UserResetForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Inventory_UserResetForm dialog = new Inventory_UserResetForm(new javax.swing.JFrame(), true, null, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but_cancel;
    private javax.swing.JButton but_save;
    private javax.swing.JPasswordField field_upasswordnew;
    private javax.swing.JPasswordField field_upasswordnew1;
    private javax.swing.JPasswordField field_upasswordold;
    private javax.swing.JLabel field_uusername;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel panel_uaccess;
    private javax.swing.JPanel panel_usecurity;
    private javax.swing.JTable table_uprivellege;
    // End of variables declaration//GEN-END:variables

    private boolean validate_field() {
        boolean validate = false;
        validated_fields = "Please check the ff. fields:\n\n";
        if (field_uusername.getText().isEmpty()) {
            validated_fields = validated_fields + "* Invalid Input for Username.\n";
            validate = true;
            return validate;
        }
        if (field_upasswordold.getText().isEmpty()) {
            validated_fields = validated_fields + "* Invalid Input for Old Password.\n";
            validate = true;
            return validate;
        }
        if (field_upasswordnew.getText().isEmpty()) {
            validated_fields = validated_fields + "* Invalid Input for Password.\n";
            validate = true;
            return validate;
        }
        if (field_upasswordnew1.getText().isEmpty()) {
            validated_fields = validated_fields + "* Invalid Input for Retype Password.\n";
            validate = true;
            return validate;
        }

        try {
            statement = connection.createStatement();
            System.out.println("SELECT AES_DECRYPT(`password`,9) FROM `user` "
                    + " where user_id = '" + User_ID + "'");
            result = statement.executeQuery("SELECT AES_DECRYPT(`password`,9) FROM `user` "
                    + " where user_id = '" + User_ID + "'");

            if (result.next()) {
                if (!(result.getString(1).compareTo(field_upasswordold.getText()) == 0)) {
                    validated_fields = validated_fields + "* Old Password is incorrect.\n";
                    validate = true;
                }
            }
            statement.close();
            result.close();

            statement = connection.createStatement();
            result = statement.executeQuery("SELECT `username` FROM `user` "
                    + " where username = '" + field_uusername.getText() + "' and user_id not in ('" + User_ID + "')");

            if (result.next()) {
                validated_fields = validated_fields + "* Username already exist.\n";
                validate = true;
            }
            statement.close();
            result.close();

        } catch (Exception e) {
            JOptionPane.showConfirmDialog(this, e.getMessage(), "D-TECH WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.WARNING_MESSAGE);
            e.printStackTrace();
        }

        if (!(field_upasswordnew.getText().compareTo(field_upasswordnew1.getText()) == 0)) {
            validated_fields = validated_fields + "* Unmatched Retype Password.\n";
            validate = true;
            return validate;
        }

        return validate;
    }

    private void clearfield() {
        field_uusername.setText(null);
        field_upasswordold.setText(null);
        field_upasswordnew.setText(null);
        field_upasswordnew1.setText(null);

        jTabbedPane1.setSelectedIndex(0);
    }

    public void restoredata() {
        try {
            Statement statement1 = connection.createStatement();
//          User_ID, Username, Password, uia, udtc, udtu, cancelflag, 7
//          Company_No., Company_Name, Owner, CContact_No, Email_Address, CAddress, Logo, cia, cdtc, cdtu, 17
//          Profile_No., Lastname, Firstname, Middlename, Sex, Birthday, PAddress, Email, PContact_No, pdtc, pdtu, 28
//          Department_No., Department, dia, ddtc, ddtu, 33
//          Position_No., Position, pia, psdtc, psdtu 38
            ResultSet result1 = statement1.executeQuery("SELECT * FROM userdetails_list u where user_id = '" + User_ID + "'");
            if (result1.next()) {
                field_uusername.setText(result1.getString(2));
                passwordold = result1.getString(3);
                statement1.close();

                statement1 = connection.createStatement();
                result1 = statement1.executeQuery("select AES_DECRYPT('" + passwordold + "',9)");
                if (result1.next()) {
                    System.out.println("Decripting Old Password : " + result1.getString(1));
                    passwordold = result1.getString(1);
                }
//                field_upasswordnew.setText(result1.getString(3));
//                field_upasswordnew1.setText(result1.getString(3));

                statement1.close();
                result1.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
