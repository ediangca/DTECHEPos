/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory.form;

import inventory.Inventory_ProductList;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class Inventory_ProductUnitForm extends javax.swing.JDialog {

    /**
     * Creates new form Inventory_PositionForm
     */
    Inventory_ProductList inventory_productlist;
    Connection connection = null;
    Statement statement;
    ResultSet result;

    String Unit_No = "";

    public Inventory_ProductUnitForm() {
    }
    DefaultTableModel position_dtm;

    public Inventory_ProductUnitForm(java.awt.Frame parent, boolean modal,
            Inventory_ProductList inventory_productlist, Connection connection) {
        super(parent, modal);
        this.inventory_productlist = inventory_productlist;
        this.connection = connection;
        initComponents();
        setLocationRelativeTo(parent);

        showQuery("SELECT `Unit_No.`, Unitname, Unit, Unittype, isActive, Datetime_Created, Datetime_Updated FROM product_unit p;");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        but_close = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        field_unit = new javax.swing.JTextField();
        but_inactive = new javax.swing.JButton();
        but_cancel = new javax.swing.JButton();
        but_newsaveupdate = new javax.swing.JButton();
        field_unitname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        combo_unittype = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PRODUCT UNIT FORM");
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(204, 204, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 0));
        jLabel1.setText("UNIT SETTINGS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 0));

        but_close.setText("CLOSE");
        but_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_closeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(but_close, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(but_close, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Unit");

        field_unit.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        field_unit.setEnabled(false);

        but_inactive.setText("INACTIVE");
        but_inactive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_inactiveActionPerformed(evt);
            }
        });

        but_cancel.setText("CANCEL");
        but_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_cancelActionPerformed(evt);
            }
        });

        but_newsaveupdate.setText("NEW");
        but_newsaveupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_newsaveupdateActionPerformed(evt);
            }
        });

        field_unitname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        field_unitname.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Name");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Type");

        combo_unittype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Small Unit", "Big Unit" }));
        combo_unittype.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(combo_unittype, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(field_unit, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(field_unitname, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(but_newsaveupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_inactive, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field_unit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo_unittype))
                        .addGap(9, 9, 9))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(field_unitname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(but_cancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(but_inactive, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(but_newsaveupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))))
        );

        but_inactive.setVisible(false);
        but_cancel.setVisible(false);

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Unit No.", "Unit Name", "Unit", "Type", "isActive", "Created", "Updated"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(0);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
            jTable1.getColumnModel().getColumn(1).setMinWidth(200);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(200);
            jTable1.getColumnModel().getColumn(2).setMinWidth(50);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(50);
            jTable1.getColumnModel().getColumn(3).setMinWidth(150);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(150);
            jTable1.getColumnModel().getColumn(4).setMinWidth(20);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(20);
            jTable1.getColumnModel().getColumn(5).setMinWidth(150);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(150);
            jTable1.getColumnModel().getColumn(6).setMinWidth(150);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(6).setMaxWidth(150);
        }

        jLabel3.setBackground(new java.awt.Color(204, 51, 0));
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Note: Double click on the list to edit.");
        jLabel3.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void but_inactiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_inactiveActionPerformed
        // TODO add your handling code here:
        try {
            boolean active;
            if (but_inactive.getText().equalsIgnoreCase("INACTIVE")) {
                active = false;
            } else {
                active = true;
            }
            statement = connection.createStatement();
            System.out.println("update product_unit set isActive = " + active + ", "
                    + "Datetime_Updated = '" + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "' where `Unit_No.` = '" + Unit_No + "';");
            statement.executeUpdate("update product_unit set isActive = " + active + ", "
                    + "Datetime_Updated = '" + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "' where `Unit_No.` = '" + Unit_No + "';");

            field_unit.setText(null);

            statement.close();
            JOptionPane.showConfirmDialog(this, "Unit Successfully " + but_inactive.getText() + "TED", "INFORMATION", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);

            showQuery("SELECT `Unit_No.`, Unitname, Unit, Unittype, isActive, Datetime_Created, Datetime_Updated FROM product_unit p;");

            Unit_No = "";
            field_unit.setText(null);
            field_unitname.setText(null);
            combo_unittype.setSelectedIndex(0);
            field_unit.setEnabled(false);
            field_unitname.setEnabled(false);
            combo_unittype.setEnabled(false);
            but_newsaveupdate.setText("New");
            but_newsaveupdate.setVisible(true);
            but_inactive.setVisible(false);
            but_cancel.setVisible(false);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_but_inactiveActionPerformed

    private void but_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_closeActionPerformed
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(this, "Do you really want to cancel adding/updating unit?", "CONFIRMATION", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (x == JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_but_closeActionPerformed

    private void but_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_cancelActionPerformed
        // TODO add your handling code here:
        Unit_No = "";
        field_unit.setText(null);
        field_unitname.setText(null);
        combo_unittype.setSelectedIndex(0);
        field_unit.setEnabled(false);
        field_unitname.setEnabled(false);
        combo_unittype.setEnabled(false);
        but_newsaveupdate.setText("New");
        but_newsaveupdate.setVisible(true);
        but_inactive.setVisible(false);
        but_cancel.setVisible(false);
    }//GEN-LAST:event_but_cancelActionPerformed

    private void but_newsaveupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_newsaveupdateActionPerformed
        // TODO add your handling code here:
        if (but_newsaveupdate.getText().equalsIgnoreCase("new")) {
            but_newsaveupdate.setText("SAVE");
            field_unit.setText(null);
            field_unitname.setText(null);
            combo_unittype.setSelectedIndex(0);
            field_unit.setEnabled(true);
            field_unitname.setEnabled(true);
            combo_unittype.setEnabled(true);
            but_cancel.setVisible(true);
        } else if (but_newsaveupdate.getText().equalsIgnoreCase("save")) {
            if (field_unit.getText().isEmpty() || field_unitname.getText().isEmpty()
                    || combo_unittype.getSelectedIndex() == 0) {
                JOptionPane.showConfirmDialog(this, "Either your Input is empty or Invalid\n\nPlease check you input(s)", "D-TECH WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.WARNING_MESSAGE);
                return;
            }
            try {
                statement = connection.createStatement();
                System.out.println("select * from product_unit where `unitname` = '" + field_unitname.getText() + "' and Unittype = '" + combo_unittype.getSelectedItem() + "'");
                result = statement.executeQuery("select * from product_unit where `unitname` = '" + field_unitname.getText() + "' and Unittype = '" + combo_unittype.getSelectedItem() + "'");
                if (result.next()) {
                    JOptionPane.showConfirmDialog(this, "Unit already exist!", "WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.WARNING_MESSAGE);
                    return;
                } else {
//                    Unit, Name, Type, Datetime_Created, Datetime_Updated, User_ID, isActive
                    System.out.println("insert into product_unit (Unit, Unitname, Unittype, isActive, Datetime_Created, Datetime_Updated, User_ID)values('"
                            + field_unit.getText() + "','"
                            + field_unitname.getText() + "','"
                            + combo_unittype.getSelectedItem() + "',true,'"
                            + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "','"
                            + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "','" + inventory_productlist.inventory_mainframe.userID + "')");
                    statement.executeUpdate("insert into product_unit (Unit, Unitname, Unittype, isActive, Datetime_Created, Datetime_Updated, User_ID)values('"
                            + field_unit.getText() + "','"
                            + field_unitname.getText() + "','"
                            + combo_unittype.getSelectedItem() + "',true,'"
                            + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "','"
                            + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "','" + inventory_productlist.inventory_mainframe.userID + "')");

                    JOptionPane.showConfirmDialog(this, "Unit Successfully Added!", "INFORMATION", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);
                    field_unit.setText(null);
                    field_unitname.setText(null);
                    combo_unittype.setSelectedIndex(0);

                    showQuery("SELECT `Unit_No.`, Unitname, Unit, Unittype, isActive, Datetime_Created, Datetime_Updated FROM product_unit p;");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        } else if (but_newsaveupdate.getText().equalsIgnoreCase("update")) {
            try {
                boolean active;
                if (but_inactive.getText().equalsIgnoreCase("INACTIVE")) {
                    active = false;
                } else {
                    active = true;
                }
                statement = connection.createStatement();
                System.out.println("update product_unit set  unit = '" + field_unit.getText() + "', unitname = '" + field_unitname.getText() + "', "
                        + "Datetime_Updated = '" + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "', User_ID = '" + inventory_productlist.inventory_mainframe.userID + "' where `Unit_No.` = '" + Unit_No + "';");
                statement.executeUpdate("update product_unit set  unit = '" + field_unit.getText() + "', unitname = '" + field_unitname.getText() + "', "
                        + "Datetime_Updated = '" + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "', User_ID = '" + inventory_productlist.inventory_mainframe.userID + "' where `Unit_No.` = '" + Unit_No + "';");

                field_unit.setText(null);
                field_unitname.setText(null);
                combo_unittype.setSelectedIndex(0);

                statement.close();

                JOptionPane.showConfirmDialog(this, "Unit Successfully Updated!", "INFORMATION", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);

                showQuery("SELECT `Unit_No.`, Unitname, Unit, Unittype, isActive, Datetime_Created, Datetime_Updated FROM product_unit p;");

                Unit_No = "";
                field_unit.setText(null);
                field_unitname.setText(null);
                combo_unittype.setSelectedIndex(0);
                field_unit.setEnabled(false);
                field_unitname.setEnabled(false);
                combo_unittype.setEnabled(false);
                but_newsaveupdate.setText("New");
                but_newsaveupdate.setVisible(true);
                but_inactive.setVisible(false);
                but_cancel.setVisible(false);

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_but_newsaveupdateActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() >= 2) {
            if (jTable1.getSelectedRow() > -1) {
                but_newsaveupdate.setText("UPDATE");
                but_cancel.setVisible(true);
                but_inactive.setVisible(true);
                restoredata(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but_cancel;
    private javax.swing.JButton but_close;
    private javax.swing.JButton but_inactive;
    private javax.swing.JButton but_newsaveupdate;
    private javax.swing.JComboBox<String> combo_unittype;
    private javax.swing.JTextField field_unit;
    private javax.swing.JTextField field_unitname;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void resettable() {
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Unit No.", "Unit Name", "Unit", "Type", "isActive", "Created", "Updated"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);

        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(0);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
            jTable1.getColumnModel().getColumn(1).setMinWidth(200);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(200);
            jTable1.getColumnModel().getColumn(2).setMinWidth(50);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(50);
            jTable1.getColumnModel().getColumn(3).setMinWidth(150);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(150);
            jTable1.getColumnModel().getColumn(4).setMinWidth(20);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(20);
            jTable1.getColumnModel().getColumn(5).setMinWidth(150);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(150);
            jTable1.getColumnModel().getColumn(6).setMinWidth(150);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(6).setMaxWidth(150);
        }

        position_dtm = (DefaultTableModel) jTable1.getModel();
    }

    public void showQuery(String query) {
        resettable();

        try {
            statement = connection.createStatement();
            result = statement.executeQuery(query);

//                    Name, Unit, Type, Datetime_Created, Datetime_Updated, User_ID, isActive
            while (result.next()) {
                position_dtm.addRow(new Object[]{
                    result.getString(1),
                    result.getString(2),
                    result.getString(3),
                    result.getString(4),
                    result.getBoolean(5),
                    result.getString(6),
                    result.getString(7)});
            }
            statement.close();
            result.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void restoredata(String unitno) {
        try {
            statement = connection.createStatement();
            System.out.println("SELECT `Unit_No.`, Unit, Unitname, Unittype, isActive, Datetime_Created, Datetime_Updated, User_ID FROM product_unit p where "
                    + "`Unit_No.` = '" + unitno + "'");
            result = statement.executeQuery("SELECT `Unit_No.`, Unit, Unitname, Unittype, isActive, Datetime_Created, Datetime_Updated, User_ID FROM product_unit p where "
                    + "`Unit_No.` = '" + unitno + "'");
            if (result.next()) {
                Unit_No = result.getString(1);
                field_unit.setText(result.getString(2));
                field_unitname.setText(result.getString(3));
                combo_unittype.setSelectedItem(result.getString(4));
                field_unit.setEnabled(true);
                field_unitname.setEnabled(true);
                combo_unittype.setEnabled(true);
                if (result.getBoolean(5)) {
                    but_inactive.setText("INACTIVE");
                } else {
                    but_inactive.setText("ACTIVE");
                }

            }
            statement.close();
            result.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
