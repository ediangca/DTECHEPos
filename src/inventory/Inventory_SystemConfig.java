/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory;

import classes.ConfirmationDialog;
import classes.MysqlConnect;
import inventory.form.Inventory_CompanyForm;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class Inventory_SystemConfig extends javax.swing.JPanel {

    /**
     * Creates new form Inventory_Warehouse
     */
    Inventory_Mainframe inventory_mainframe;
    Inventory_CompanyForm inventory_companyform;

    public Connection connection;
    public boolean confirm_switch = false;
    Statement statement;
    ResultSet result;
    MysqlConnect testdb;

    DefaultTableModel company_dtm;
    DefaultTableModel counter_dtm;

    Timer reboottimer = null;
    static int reboot_countdown = 0;

    public Inventory_SystemConfig(Inventory_Mainframe inventory_mainframe) {
        this.inventory_mainframe = inventory_mainframe;
        initComponents();
        company_dtm = (DefaultTableModel) table_company.getModel();
        counter_dtm = (DefaultTableModel) table_counter.getModel();
        this.connection = inventory_mainframe.connection;
        jTabbedPane1StateChanged(null);
        component_access();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton9 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panel_company = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        but_compview = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        but_compreenable = new javax.swing.JButton();
        but_compdisable = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_company = new javax.swing.JTable();
        but_compdelete = new javax.swing.JButton();
        but_compedit = new javax.swing.JButton();
        but_compnew = new javax.swing.JButton();
        field_compsearch = new javax.swing.JTextField();
        panel_counter = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        table_counter = new javax.swing.JTable();
        but_counterdelete = new javax.swing.JButton();
        but_counterpedit = new javax.swing.JButton();
        but_counterpnew = new javax.swing.JButton();
        field_counsearch = new javax.swing.JTextField();
        panel_dbconnection = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        but_dbset = new javax.swing.JButton();
        but_dbtest = new javax.swing.JButton();
        field_schema = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        field_pass = new javax.swing.JPasswordField();
        field_user = new javax.swing.JTextField();
        field_host = new javax.swing.JComboBox<>();
        field_port = new javax.swing.JTextField();
        label_indication = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        jSpinner1 = new javax.swing.JSpinner();
        jButton3 = new javax.swing.JButton();

        jButton9.setText("SHOW MORE FILTER");

        jButton23.setText("SHOW MORE FILTER");

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel6.setOpaque(false);

        jPanel7.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(204, 204, 0)));
        jPanel7.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("sansserif", 3, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 0));
        jLabel2.setText("System Configuration");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        panel_company.setOpaque(false);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Properties", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 1, 14))); // NOI18N
        jPanel5.setOpaque(false);

        but_compview.setText("View");
        but_compview.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        but_compview.setContentAreaFilled(false);
        but_compview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_compviewActionPerformed(evt);
            }
        });

        jButton11.setText("Print All");
        jButton11.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jButton11.setContentAreaFilled(false);

        jButton12.setText("Print");
        jButton12.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jButton12.setContentAreaFilled(false);

        but_compreenable.setText("Re-Enable");
        but_compreenable.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        but_compreenable.setContentAreaFilled(false);
        but_compreenable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_compreenableActionPerformed(evt);
            }
        });

        but_compdisable.setText("Disable");
        but_compdisable.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        but_compdisable.setContentAreaFilled(false);
        but_compdisable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_compdisableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(but_compview, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addComponent(but_compreenable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(but_compdisable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(but_compview, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(but_compreenable, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(but_compdisable, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.setOpaque(false);

        table_company.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        table_company.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Company No.", "Company", "Owner", "isActive", "Created", "Updated"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_company.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        table_company.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_companyMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(table_company);
        if (table_company.getColumnModel().getColumnCount() > 0) {
            table_company.getColumnModel().getColumn(0).setPreferredWidth(150);
            table_company.getColumnModel().getColumn(1).setResizable(false);
            table_company.getColumnModel().getColumn(1).setPreferredWidth(250);
            table_company.getColumnModel().getColumn(2).setResizable(false);
            table_company.getColumnModel().getColumn(2).setPreferredWidth(200);
            table_company.getColumnModel().getColumn(3).setResizable(false);
            table_company.getColumnModel().getColumn(3).setPreferredWidth(70);
            table_company.getColumnModel().getColumn(4).setResizable(false);
            table_company.getColumnModel().getColumn(4).setPreferredWidth(150);
            table_company.getColumnModel().getColumn(5).setResizable(false);
            table_company.getColumnModel().getColumn(5).setPreferredWidth(150);
        }

        but_compdelete.setText("DELETE");
        but_compdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_compdeleteActionPerformed(evt);
            }
        });

        but_compedit.setText("EDIT");
        but_compedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_compeditActionPerformed(evt);
            }
        });

        but_compnew.setText("NEW");
        but_compnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_compnewActionPerformed(evt);
            }
        });

        field_compsearch.setText("Search here. .");
        field_compsearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                field_compsearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                field_compsearchFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(field_compsearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_compnew, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_compedit, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_compdelete)
                        .addGap(1, 1, 1))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(but_compdelete)
                    .addComponent(but_compedit)
                    .addComponent(but_compnew)
                    .addComponent(field_compsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panel_companyLayout = new javax.swing.GroupLayout(panel_company);
        panel_company.setLayout(panel_companyLayout);
        panel_companyLayout.setHorizontalGroup(
            panel_companyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_companyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panel_companyLayout.setVerticalGroup(
            panel_companyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_companyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_companyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_companyLayout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Company/Branch Details", panel_company);

        panel_counter.setOpaque(false);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Properties", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 1, 14))); // NOI18N
        jPanel8.setOpaque(false);

        jButton15.setText("View");
        jButton15.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jButton15.setContentAreaFilled(false);
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setText("Print All");
        jButton16.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jButton16.setContentAreaFilled(false);

        jButton17.setText("Print");
        jButton17.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jButton17.setContentAreaFilled(false);

        jButton18.setText("Re-Enable");
        jButton18.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jButton18.setContentAreaFilled(false);
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setText("Disable");
        jButton19.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jButton19.setContentAreaFilled(false);
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addComponent(jButton18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setOpaque(false);

        table_counter.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        table_counter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Counter/Terminal", "Type", "Company", "isActive", "Created", "Updated"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_counter.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        table_counter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_counterMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(table_counter);
        if (table_counter.getColumnModel().getColumnCount() > 0) {
            table_counter.getColumnModel().getColumn(0).setMinWidth(0);
            table_counter.getColumnModel().getColumn(0).setPreferredWidth(0);
            table_counter.getColumnModel().getColumn(0).setMaxWidth(0);
            table_counter.getColumnModel().getColumn(1).setResizable(false);
            table_counter.getColumnModel().getColumn(1).setPreferredWidth(300);
            table_counter.getColumnModel().getColumn(2).setResizable(false);
            table_counter.getColumnModel().getColumn(2).setPreferredWidth(150);
            table_counter.getColumnModel().getColumn(3).setResizable(false);
            table_counter.getColumnModel().getColumn(3).setPreferredWidth(150);
            table_counter.getColumnModel().getColumn(4).setResizable(false);
            table_counter.getColumnModel().getColumn(4).setPreferredWidth(60);
            table_counter.getColumnModel().getColumn(5).setResizable(false);
            table_counter.getColumnModel().getColumn(5).setPreferredWidth(150);
            table_counter.getColumnModel().getColumn(6).setResizable(false);
            table_counter.getColumnModel().getColumn(6).setPreferredWidth(150);
        }

        but_counterdelete.setText("DELETE");

        but_counterpedit.setText("EDIT");

        but_counterpnew.setText("NEW");

        field_counsearch.setText("Search here. .");
        field_counsearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                field_counsearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                field_counsearchFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(field_counsearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_counterpnew, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_counterpedit, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_counterdelete)
                        .addGap(1, 1, 1))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(but_counterdelete)
                    .addComponent(but_counterpedit)
                    .addComponent(but_counterpnew)
                    .addComponent(field_counsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panel_counterLayout = new javax.swing.GroupLayout(panel_counter);
        panel_counter.setLayout(panel_counterLayout);
        panel_counterLayout.setHorizontalGroup(
            panel_counterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_counterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panel_counterLayout.setVerticalGroup(
            panel_counterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_counterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_counterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_counterLayout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Counter/Terminal", panel_counter);

        panel_dbconnection.setOpaque(false);

        jPanel3.setOpaque(false);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("DB Connection"));
        jPanel4.setOpaque(false);

        jLabel1.setText("Server");

        jLabel3.setText("Username");

        but_dbset.setText("Set");
        but_dbset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_dbsetActionPerformed(evt);
            }
        });

        but_dbtest.setText("Test Connection");
        but_dbtest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_dbtestActionPerformed(evt);
            }
        });

        field_schema.setText("dtech_sales_inventory_db");
        field_schema.setEnabled(false);

        jLabel5.setText("Schema");

        jLabel4.setText("Password");

        field_user.setText("root");

        field_host.setEditable(true);
        field_host.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "localhost" }));

        field_port.setEditable(false);
        field_port.setText("3360");

        label_indication.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_indication, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(but_dbtest)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(but_dbset, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(field_user)
                            .addComponent(field_pass)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addComponent(field_host, 0, 124, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(field_port, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(field_schema)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field_host)
                    .addComponent(field_port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field_user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field_pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(field_schema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label_indication, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(but_dbset)
                    .addComponent(but_dbtest)))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("DB Backup Schedule"));
        jPanel9.setOpaque(false);

        jLabel7.setText("Time");

        jLabel6.setText("Schedule");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Daily", "Weekly", "Yearly" }));

        jLabel9.setForeground(new java.awt.Color(153, 153, 153));
        jLabel9.setText("24hrs format");

        jSpinner2.setModel(new javax.swing.SpinnerListModel(new String[] {"00", "10", "15", "30", "45", "50", "55"}));

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 24, 1));

        jButton3.setText("Set");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinner2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3))
        );

        javax.swing.GroupLayout panel_dbconnectionLayout = new javax.swing.GroupLayout(panel_dbconnection);
        panel_dbconnection.setLayout(panel_dbconnectionLayout);
        panel_dbconnectionLayout.setHorizontalGroup(
            panel_dbconnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_dbconnectionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(162, Short.MAX_VALUE))
        );
        panel_dbconnectionLayout.setVerticalGroup(
            panel_dbconnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_dbconnectionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_dbconnectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Database Config", panel_dbconnection);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        // TODO add your handling code here:
        try {
            System.err.println("Select Tab index >>> " + jTabbedPane1.getSelectedIndex());
            if (jTabbedPane1.getSelectedIndex() == 0) {
                showQueryCompany("select `Company_No.`, Company_Name, Owner, isActive, Datetime_Created, Datetime_Updated FROM company c where cancelflag = 0;");
            }
            if (jTabbedPane1.getSelectedIndex() == 1) {
                showQueryCompany("select * from counterlist;");
            }
            if (jTabbedPane1.getSelectedIndex() == 2) {

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void but_compviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_compviewActionPerformed
        // TODO add your handling code here:
        if (table_company.getSelectedRow() < 0) {
            JOptionPane.showConfirmDialog(this, "Please select a company first on the table to view.", "D-TECH INFORMATION", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        inventory_companyform = new Inventory_CompanyForm(inventory_mainframe, true, this, table_company.getValueAt(table_company.getSelectedRow(), 0).toString());
        inventory_companyform.viewcompanyonly();
        inventory_companyform.setVisible(true);
    }//GEN-LAST:event_but_compviewActionPerformed

    private void but_compreenableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_compreenableActionPerformed
        // TODO add your handling code here:
        if (table_company.getSelectedRow() < 0) {
            JOptionPane.showConfirmDialog(this, "Please select a company first on the table to re-enable.", "D-TECH INFORMATION", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        try {
            statement = connection.createStatement();
            result = statement.executeQuery("select isActive from `company` where `Company_No.` ='" + table_company.getValueAt(table_company.getSelectedRow(), 0) + "'");

            if (result.next()) {
                if (!result.getBoolean(1)) {
                    int y = JOptionPane.showConfirmDialog(this, "Do you really want to re-enable the selected company?", "D-TECH CONFIRMATION", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

                    if (y == JOptionPane.YES_OPTION) {
                        statement.close();
                        statement = connection.createStatement();
                        statement.executeUpdate("update `company` set isActive = 1 where `Company_No.` ='" + table_company.getValueAt(table_company.getSelectedRow(), 0) + "'");

                        JOptionPane.showConfirmDialog(this, "Company Successfully Re-Enabled!", "INFORMATION", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);

                    }
                } else {
                    JOptionPane.showConfirmDialog(this, "Company is already enabled.", "D-TECH WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.WARNING_MESSAGE);
                }
            }
            statement.close();
            result.close();
            refreshtable();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_but_compreenableActionPerformed

    private void but_compdisableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_compdisableActionPerformed
        // TODO add your handling code here:
        if (table_company.getSelectedRow() < 0) {
            JOptionPane.showConfirmDialog(this, "Please select a company first on the table to disable.", "D-TECH INFORMATION", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        try {
            statement = connection.createStatement();
            result = statement.executeQuery("select isActive from `company` where `Company_No.` ='" + table_company.getValueAt(table_company.getSelectedRow(), 0) + "'");

            if (result.next()) {
                if (result.getBoolean(1)) {
                    int y = JOptionPane.showConfirmDialog(this, "Do you really want to disable the selected user?", "D-TECH CONFIRMATION", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

                    if (y == JOptionPane.YES_OPTION) {
                        statement.close();
                        statement = connection.createStatement();
                        statement.executeUpdate("update `company` set isActive = 0 where `Company_No.` ='" + table_company.getValueAt(table_company.getSelectedRow(), 0) + "'");

                        JOptionPane.showConfirmDialog(this, "Company Successfully Disabled!", "INFORMATION", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);

                        statement.close();
                    }
                } else {
                    JOptionPane.showConfirmDialog(this, "Company is already disabled.", "D-TECH WARNING", JOptionPane.PLAIN_MESSAGE, JOptionPane.WARNING_MESSAGE);
                }
            }
            result.close();
            refreshtable();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_but_compdisableActionPerformed

    private void table_companyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_companyMouseClicked
        // TODO add your handling code here:
        if (table_company.getSelectedRow() > -1 && table_company.getSelectedColumn() > -1) {
            table_company.setToolTipText(table_company.getValueAt(table_company.getSelectedRow(), table_company.getSelectedColumn()).toString());
        }
    }//GEN-LAST:event_table_companyMouseClicked

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton19ActionPerformed

    private void table_counterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_counterMouseClicked
        // TODO add your handling code here:
        if (table_counter.getSelectedRow() > -1 && table_counter.getSelectedColumn() > -1) {
            table_counter.setToolTipText(table_counter.getValueAt(table_counter.getSelectedRow(), table_counter.getSelectedColumn()).toString());
        }
    }//GEN-LAST:event_table_counterMouseClicked

    private void but_compnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_compnewActionPerformed
        // TODO add your handling code here:
        inventory_companyform = new Inventory_CompanyForm(inventory_mainframe, true, this);
        inventory_companyform.setVisible(true);
    }//GEN-LAST:event_but_compnewActionPerformed

    private void field_compsearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_compsearchFocusGained
        // TODO add your handling code here:
        if (field_compsearch.getText().equalsIgnoreCase("Search here. .")) {
            field_compsearch.setText(null);
        }
    }//GEN-LAST:event_field_compsearchFocusGained

    private void field_compsearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_compsearchFocusLost
        // TODO add your handling code here:
        if (field_compsearch.getText().isEmpty()) {
            field_compsearch.setText("Search here. .");
        }
    }//GEN-LAST:event_field_compsearchFocusLost

    private void field_counsearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_counsearchFocusGained
        // TODO add your handling code here:
        if (field_counsearch.getText().equalsIgnoreCase("Search here. .")) {
            field_counsearch.setText(null);
        }
    }//GEN-LAST:event_field_counsearchFocusGained

    private void field_counsearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_counsearchFocusLost
        // TODO add your handling code here:
        if (field_counsearch.getText().isEmpty()) {
            field_counsearch.setText("Search here. .");
        }
    }//GEN-LAST:event_field_counsearchFocusLost

    private void but_dbsetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_dbsetActionPerformed
        // TODO add your handling code here:
        try {
            if (isvalidated()) {
                return;
            }
            //Check if Existing Host
            statement = connection.createStatement();
//            Host, Port, Username, Password, Database, Datetime_Created, Datetime_Updated, User_ID, isActive
            result = statement.executeQuery("select * from `host` where `host` = '" + field_host.getSelectedItem() + "'");
            if (result.next()) {

                if (result.getBoolean("isActive")) {
                    JOptionPane.showMessageDialog(this, "Host already existing and currently established.", "D-TECH INFORMATION", JOptionPane.INFORMATION_MESSAGE);
                } else {
//                    JOptionPane.showMessageDialog(this, "Host already existing. \n Do you want to switch connection.", "D-TECH INFORMATION", JOptionPane.INFORMATION_MESSAGE);
                    confirm_switch = false;

                    ConfirmationDialog confirmationdialog = new ConfirmationDialog(inventory_mainframe, true, this);
                    confirmationdialog.setTitle("D-TECH SWITCH CONFIRMATION");
                    confirmationdialog.setContent("D-TECH CONFIRMATION", "Host already existing. \n Do you really want to switch connection?");
                    confirmationdialog.setVisible(true);

                    if (confirm_switch) {
                        statement.close();
                        statement = connection.createStatement();
                        statement.executeUpdate("update `host` set isActive = 0;");
                        statement = connection.createStatement();
                        statement.executeUpdate("update `host` set isActive = 1 where `host` ='" + field_host.getSelectedItem() + "'");

                        reboot();
                    }
                }
            } else {
                confirm_switch = false;

                ConfirmationDialog confirmationdialog = new ConfirmationDialog(inventory_mainframe, true, this);
                confirmationdialog.setTitle("D-TECH SWITCH CONFIRMATION");
                confirmationdialog.setContent("D-TECH SWITCH CONFIRMATION", "Do you really want to create new connection?");
                confirmationdialog.setVisible(true);

                if (confirm_switch) {

                    label_indication.setText("Establish New Connection..");
                    statement = connection.createStatement();
                    statement.executeUpdate("update `host` set isActive = 0;");
                    statement = connection.createStatement();
                    statement.executeUpdate("insert into `host` values('"
                            + field_host.getSelectedItem() + "','"
                            + field_port.getText() + "','"
                            + field_user.getText() + "',AES_ENCRYPT('"
                            + field_pass.getText() + "',9),'"
                            + field_schema.getText() + "','"
                            + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new java.util.Date()) + "','"
                            + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new java.util.Date()) + "','"
                            + inventory_mainframe.userID + "',1)");

                    reboot();
                }
            }
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(inventory_mainframe, e.getMessage(), "D-TECH TEST CONNECTION ERROR", JOptionPane.OK_OPTION, JOptionPane.WARNING_MESSAGE);
            System.err.println(e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_but_dbsetActionPerformed

    private void but_dbtestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_dbtestActionPerformed
        // TODO add your handling code here:
        try {
            if (isvalidated()) {
                return;
            }
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(inventory_mainframe, e.getMessage(), "D-TECH TEST CONNECTION ERROR", JOptionPane.OK_OPTION, JOptionPane.WARNING_MESSAGE);
            System.err.println(e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_but_dbtestActionPerformed

    private void but_compeditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_compeditActionPerformed
        // TODO add your handling code here:
        if (table_company.getSelectedRow() < 0) {
            JOptionPane.showConfirmDialog(this, "Please select a company first on the table to edit.", "D-TECH INFORMATION", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        inventory_companyform = new Inventory_CompanyForm(inventory_mainframe, true, this, table_company.getValueAt(table_company.getSelectedRow(), 0).toString());
        inventory_companyform.setVisible(true);
    }//GEN-LAST:event_but_compeditActionPerformed

    private void but_compdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_compdeleteActionPerformed
        // TODO add your handling code here
        if (table_company.getSelectedRow() < 0) {
            JOptionPane.showConfirmDialog(this, "Please select a company first on the table to delete.", "D-TECH INFORMATION", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        int x = JOptionPane.showConfirmDialog(this, "Do you really want to delete the selected company?", "CONFIRMATION", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (x == JOptionPane.YES_OPTION) {
            try {
                statement = connection.createStatement();
                statement.executeUpdate("update `company` set cancelflag = 1, isactive = 0 where `Company_No.` ='" + table_company.getValueAt(table_company.getSelectedRow(), 0) + "'");

                JOptionPane.showConfirmDialog(this, "Company Successfully Deleted!", "INFORMATION", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);

                statement.close();

                refreshtable();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_but_compdeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but_compdelete;
    private javax.swing.JButton but_compdisable;
    private javax.swing.JButton but_compedit;
    private javax.swing.JButton but_compnew;
    private javax.swing.JButton but_compreenable;
    private javax.swing.JButton but_compview;
    private javax.swing.JButton but_counterdelete;
    private javax.swing.JButton but_counterpedit;
    private javax.swing.JButton but_counterpnew;
    private javax.swing.JButton but_dbset;
    private javax.swing.JButton but_dbtest;
    private javax.swing.JTextField field_compsearch;
    private javax.swing.JTextField field_counsearch;
    private javax.swing.JComboBox<String> field_host;
    private javax.swing.JPasswordField field_pass;
    private javax.swing.JTextField field_port;
    private javax.swing.JTextField field_schema;
    private javax.swing.JTextField field_user;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel label_indication;
    private javax.swing.JPanel panel_company;
    private javax.swing.JPanel panel_counter;
    private javax.swing.JPanel panel_dbconnection;
    private javax.swing.JTable table_company;
    private javax.swing.JTable table_counter;
    // End of variables declaration//GEN-END:variables

    private void resettable() {
        table_company.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Company No.", "Company", "Owner", "isActive", "Created", "Updated"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        if (table_company.getColumnModel().getColumnCount() > 0) {
            table_company.getColumnModel().getColumn(0).setPreferredWidth(150);
            table_company.getColumnModel().getColumn(1).setResizable(false);
            table_company.getColumnModel().getColumn(1).setPreferredWidth(250);
            table_company.getColumnModel().getColumn(2).setResizable(false);
            table_company.getColumnModel().getColumn(2).setPreferredWidth(200);
            table_company.getColumnModel().getColumn(3).setResizable(false);
            table_company.getColumnModel().getColumn(3).setPreferredWidth(70);
            table_company.getColumnModel().getColumn(4).setResizable(false);
            table_company.getColumnModel().getColumn(4).setPreferredWidth(150);
            table_company.getColumnModel().getColumn(5).setResizable(false);
            table_company.getColumnModel().getColumn(5).setPreferredWidth(150);
        }
        //COUNTER TABLE
        table_counter.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "#", "Counter/Terminal", "Type", "Company", "isActive", "Created", "Updated"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        if (table_counter.getColumnModel().getColumnCount() > 0) {
            table_counter.getColumnModel().getColumn(0).setMinWidth(0);
            table_counter.getColumnModel().getColumn(0).setPreferredWidth(0);
            table_counter.getColumnModel().getColumn(0).setMaxWidth(0);
            table_counter.getColumnModel().getColumn(1).setResizable(false);
            table_counter.getColumnModel().getColumn(1).setPreferredWidth(300);
            table_counter.getColumnModel().getColumn(2).setResizable(false);
            table_counter.getColumnModel().getColumn(2).setPreferredWidth(150);
            table_counter.getColumnModel().getColumn(3).setResizable(false);
            table_counter.getColumnModel().getColumn(3).setPreferredWidth(150);
            table_counter.getColumnModel().getColumn(4).setResizable(false);
            table_counter.getColumnModel().getColumn(4).setPreferredWidth(60);
            table_counter.getColumnModel().getColumn(5).setResizable(false);
            table_counter.getColumnModel().getColumn(5).setPreferredWidth(150);
            table_counter.getColumnModel().getColumn(6).setResizable(false);
            table_counter.getColumnModel().getColumn(6).setPreferredWidth(150);
        }
        company_dtm = (DefaultTableModel) table_company.getModel();
        counter_dtm = (DefaultTableModel) table_counter.getModel();
    }

    public void refreshtable() {
        jTabbedPane1StateChanged(null);
    }

    public void showQueryCompany(String query) {
        resettable();
        try {
            if (connection == null) {
                return;
            }
            statement = connection.createStatement();
            result = statement.executeQuery(query);
            if (jTabbedPane1.getSelectedIndex() == 0) {
                System.out.println("Company : \n" + query);
                while (result.next()) {
//              Company, isActive, Datetime_Created, Datetime_Updated
                    company_dtm.addRow(new Object[]{result.getString(1),
                        result.getString(2),
                        result.getString(3),
                        result.getBoolean(4),
                        result.getString(5),
                        result.getString(6)});
                }
            }
            if (jTabbedPane1.getSelectedIndex() == 1) {
                System.out.println("Counter : \n" + query);
//                Counter_ID, Counter, Counter_Type, Company, isActive, Datetime_Updated
                while (result.next()) {
                    counter_dtm.addRow(new Object[]{result.getString(1),
                        result.getString(2),
                        result.getString(3),
                        result.getString(4),
                        result.getBoolean(5),
                        result.getString(6),
                        result.getString(7)});
                }
            }

            statement.close();
            result.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void component_access() {
        if (!inventory_mainframe.position.equalsIgnoreCase("tech-administrator")) {
            jTabbedPane1.removeTabAt(1);
            jTabbedPane1.removeTabAt(2);
        }
    }

    private boolean isvalidated() throws Exception {
        boolean valid = false;
        if (field_host.getSelectedItem().toString().isEmpty()) {
            valid = true;
            JOptionPane.showMessageDialog(this, "Invalid empty field for host", "D-TECH INFORMATION", JOptionPane.INFORMATION_MESSAGE);
            return valid;
        }
        if (field_user.getText().isEmpty()) {
            valid = true;
            JOptionPane.showMessageDialog(this, "Invalid empty field for username", "D-TECH INFORMATION", JOptionPane.INFORMATION_MESSAGE);
            return valid;
        }
        if (field_schema.getText().isEmpty()) {
            valid = true;
            JOptionPane.showMessageDialog(this, "Invalid empty field for schema", "D-TECH INFORMATION", JOptionPane.INFORMATION_MESSAGE);
            return valid;
        }
        label_indication.setText("Testing Database Connection..");
        testdb = new MysqlConnect(field_host.getSelectedItem().toString(), field_schema.getText(), field_user.getText(), field_pass.getText());
        if (testdb.connect() == null) {
            valid = true;
            JOptionPane.showMessageDialog(this, "Connection is invalid.", "D-TECH CONNECTION ACCESS DENIED", JOptionPane.INFORMATION_MESSAGE);
            label_indication.setText("Ivalid Database Connection..");
            return valid;
        }
        return valid;
    }

    private void reboot() throws Exception {
        reboot_countdown = 0;
        reboottimer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                reboot_countdown++;
                System.err.println("System Reboot in " + reboot_countdown + "sec(s)..");
                label_indication.setText("System Reboot in " + reboot_countdown + "sec(s)..");
                if (reboot_countdown > 3) {
                    reboottimer.stop();
                    reboot_countdown = 0;
                    label_indication.setText("Reboot System.");
                    JOptionPane.showMessageDialog(inventory_mainframe, "Connection successfully establish! \n System Reboot now!", "D-TECH INFORMATION", JOptionPane.INFORMATION_MESSAGE);

                    inventory_mainframe.dispose();
//                    Setting new/updated connection.
                    connection = testdb.connect();
                    inventory.Inventory_Login inventorylogin = new inventory.Inventory_Login();
                    inventorylogin.setConnection(connection);
                    inventorylogin.setVisible(true);
                }
            }
        });
        reboottimer.start();
    }

}
