/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory;

import classes.Reports;
import inventory.form.Inventory_WarehouseForm;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class Inventory_WarehouseList extends javax.swing.JPanel {

    /**
     * Creates new form Inventory_Warehouse
     */
    public DefaultTableModel dtm_warehouse;

    public Inventory_Mainframe inventory_mainframe;
    Inventory_WarehouseForm Inventory_warehouseform;

    public Connection connection = null;
    Statement statement;
    ResultSet result;

    public Inventory_WarehouseList(Inventory_Mainframe inventory_mainframe) {
        initComponents();
        this.inventory_mainframe = inventory_mainframe;
        this.connection = inventory_mainframe.connection;
        dtm_warehouse = (DefaultTableModel) jTable1.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        DialogManagerOveride = new javax.swing.JDialog();
        panel_overide = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        label_title = new javax.swing.JLabel();
        but_optno = new javax.swing.JButton();
        but_optyes = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        field_overidepass = new javax.swing.JPasswordField();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu_overide = new javax.swing.JMenu();
        menuitem_oclose = new javax.swing.JMenuItem();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        but_delete = new javax.swing.JButton();
        but_add = new javax.swing.JButton();
        but_edit = new javax.swing.JButton();
        field_search = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        but_post = new javax.swing.JButton();
        but_print = new javax.swing.JButton();
        but_view = new javax.swing.JButton();
        but_reprint = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        jButton4.setText("SHOW MORE FILTER");

        DialogManagerOveride.setUndecorated(true);

        panel_overide.setBackground(new java.awt.Color(255, 255, 255));
        panel_overide.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 0), 5, true));

        jPanel2.setBackground(new java.awt.Color(204, 204, 0));

        label_title.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        label_title.setForeground(new java.awt.Color(153, 153, 0));
        label_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_title.setText("MANAGER OVERIDE");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(label_title, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(label_title, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );

        but_optno.setText("Cancel");
        but_optno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_optnoActionPerformed(evt);
            }
        });
        but_optno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                but_optnoKeyPressed(evt);
            }
        });

        but_optyes.setText("OK");
        but_optyes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_optyesActionPerformed(evt);
            }
        });
        but_optyes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                but_optyesKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Password");

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 51, 0));
        jLabel3.setText("Please enter manager/supervisor password.");

        field_overidepass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                field_overidepassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_overideLayout = new javax.swing.GroupLayout(panel_overide);
        panel_overide.setLayout(panel_overideLayout);
        panel_overideLayout.setHorizontalGroup(
            panel_overideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panel_overideLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_overideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_overideLayout.createSequentialGroup()
                        .addGap(0, 110, Short.MAX_VALUE)
                        .addComponent(but_optyes, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(but_optno, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(field_overidepass))
                .addContainerGap())
        );
        panel_overideLayout.setVerticalGroup(
            panel_overideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_overideLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(5, 5, 5)
                .addComponent(field_overidepass, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel_overideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(but_optno)
                    .addComponent(but_optyes))
                .addContainerGap())
        );

        jMenuBar1.setPreferredSize(new java.awt.Dimension(27, 0));

        menu_overide.setText("File");

        menuitem_oclose.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        menuitem_oclose.setText("Close");
        menuitem_oclose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuitem_ocloseActionPerformed(evt);
            }
        });
        menu_overide.add(menuitem_oclose);

        jMenuBar1.add(menu_overide);

        DialogManagerOveride.setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout DialogManagerOverideLayout = new javax.swing.GroupLayout(DialogManagerOveride.getContentPane());
        DialogManagerOveride.getContentPane().setLayout(DialogManagerOverideLayout);
        DialogManagerOverideLayout.setHorizontalGroup(
            DialogManagerOverideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_overide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        DialogManagerOverideLayout.setVerticalGroup(
            DialogManagerOverideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_overide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel6.setOpaque(false);

        jPanel7.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(204, 204, 0)));
        jPanel7.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("sansserif", 3, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 0));
        jLabel2.setText("WAREHOUSE");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(286, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setOpaque(false);

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "WRH NO.", "SUPPLIER", "TA", "TD", "TV", "NA", "POSTED", "CREATED", "UPDATED"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(150);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(200);
            jTable1.getColumnModel().getColumn(1).setMinWidth(250);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(250);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(300);
            jTable1.getColumnModel().getColumn(2).setMinWidth(70);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(3).setMinWidth(70);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(4).setMinWidth(70);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(5).setMinWidth(70);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(6).setMinWidth(20);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(6).setMaxWidth(50);
            jTable1.getColumnModel().getColumn(7).setMinWidth(150);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(7).setMaxWidth(200);
            jTable1.getColumnModel().getColumn(8).setMinWidth(150);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(8).setMaxWidth(200);
        }

        but_delete.setText("DELETE");
        but_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_deleteActionPerformed(evt);
            }
        });

        but_add.setText("NEW");
        but_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_addActionPerformed(evt);
            }
        });

        but_edit.setText("EDIT");
        but_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_editActionPerformed(evt);
            }
        });

        field_search.setText("Search here. .");
        field_search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                field_searchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                field_searchFocusLost(evt);
            }
        });
        field_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                field_searchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(field_search)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(but_add, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(but_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(but_delete))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(but_delete)
                    .addComponent(but_edit)
                    .addComponent(but_add)
                    .addComponent(field_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Properties", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 1, 14))); // NOI18N
        jPanel5.setOpaque(false);

        but_post.setText("Post");
        but_post.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        but_post.setContentAreaFilled(false);
        but_post.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_postActionPerformed(evt);
            }
        });

        but_print.setText("Print");
        but_print.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        but_print.setContentAreaFilled(false);
        but_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_printActionPerformed(evt);
            }
        });

        but_view.setText("View");
        but_view.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        but_view.setContentAreaFilled(false);
        but_view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_viewActionPerformed(evt);
            }
        });

        but_reprint.setText("Reprint");
        but_reprint.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        but_reprint.setContentAreaFilled(false);
        but_reprint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_reprintActionPerformed(evt);
            }
        });

        jButton9.setForeground(new java.awt.Color(102, 102, 102));
        jButton9.setText("Adjustment");
        jButton9.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jButton9.setContentAreaFilled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(but_post, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(but_view, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                    .addComponent(but_reprint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(but_print, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(but_view, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(but_post, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(but_print, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(but_reprint, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void but_postActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_postActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Select a data first to post.", "D-TECH INFORMATION", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if (Boolean.parseBoolean(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString())) {
            JOptionPane.showMessageDialog(this, "Data has been already posted.", "D-TECH INFORMATION", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        try {

            int x = JOptionPane.showConfirmDialog(this, "Do you really want to post \nthe selected warehouse?", "D-TECH CONFIRMATION", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            if (x == JOptionPane.YES_OPTION) {
                String Warehouse_No = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
                statement = connection.createStatement();
                statement.execute("update warehouse set postflag = 1, Datetime_Updated= '" + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "' where `Warehouse_No.` = '" + Warehouse_No + "'");
                statement.close();

                statement = connection.createStatement();
//                WP_No., Warehouse_No., Product_No., Cost, Unit, Qty, Total_Cost, Discount, Vat, Total_Amount, Datetime_Created, Datetime_Updated, User_ID
                result = statement.executeQuery("select * from warehouse_product  where `Warehouse_No.` = '" + Warehouse_No + "'");
                while (result.next()) {
                    Statement statement1 = connection.createStatement();
                    System.out.println("update product set quantity = (quantity + " + result.getDouble(6) + ") where `Product_No.` ='" + result.getString(3) + "'");
                    statement1.executeUpdate("update product set quantity = (quantity + " + result.getDouble(6) + ") where `Product_No.` ='" + result.getString(3) + "'");
                    statement1.close();
                }
                statement.close();

                JOptionPane.showConfirmDialog(this, "Warehouse has been successfully posted!", "D-TECH INFORMATION", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);

                showQuery("SELECT * FROM warehouselist w");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_but_postActionPerformed

    private void but_viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_viewActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Select a data first to post.", "D-TECH INFORMATION", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        Inventory_warehouseform = new Inventory_WarehouseForm(inventory_mainframe, true, this, jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        Inventory_warehouseform.setEnable(false);
        Inventory_warehouseform.restoredata();
        Inventory_warehouseform.setVisible(true);

    }//GEN-LAST:event_but_viewActionPerformed

    private void but_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_printActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Select a data first to print.", "D-TECH INFORMATION", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if (!Boolean.parseBoolean(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString())) {
            JOptionPane.showMessageDialog(this, "Post the warehouse first to print.", "D-TECH INFORMATION", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        try {

            String Warehouse_No = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
//            Checking if printed already
            statement = connection.createStatement();
            result = statement.executeQuery("select printflag from `warehouse` where `Warehouse_No.` ='" + Warehouse_No + "'");
            if (result.next()) {
                if (result.getBoolean(1)) {
                    JOptionPane.showMessageDialog(this, "Warehouse has been already printed.", "D-TECH INFORMATION", JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }
            statement.close();
//            Updating printflag status
            statement = connection.createStatement();
            System.out.println("Updating Warehouse Information...");
//                Warehouse_No., Supplier_No., Total_Amount, Total_Discount, Total_Vat, Net_Amount, Payment_type, Terms, Datetime_Created, Datetime_Updated, User_ID, postflag, cancelflag
            statement.executeUpdate("update `warehouse` set printflag = 1 where `Warehouse_No.` ='" + Warehouse_No + "'");
            statement.close();

            printwarehouse(Warehouse_No);
        } catch (Exception ex) {
            Logger.getLogger(Inventory_WarehouseList.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_but_printActionPerformed

    private void but_reprintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_reprintActionPerformed
        // TODO add your handling code here:

        if (jTable1.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Select a data first to print.", "D-TECH INFORMATION", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        try {

            String Warehouse_No = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
//            Checking if printed already
            statement = connection.createStatement();
            result = statement.executeQuery("select printflag from `warehouse` where `Warehouse_No.` ='" + Warehouse_No + "'");
            if (result.next()) {
                if (result.getBoolean(1)) {
                    JOptionPane.showMessageDialog(this, "Requires Supervisor/Manager Overide.", "D-TECH INFORMATION", JOptionPane.INFORMATION_MESSAGE);

//          Save Overide logs...
//          -----------------------------  
//          -----------------------------
//          -----------------------------
//          -----------------------------
                    DialogManagerOveride = new javax.swing.JDialog(inventory_mainframe, true);
                    DialogManagerOveride.setTitle("D-TECH MANAGER OVERIDE");
                    DialogManagerOveride.getContentPane().add(panel_overide);
                    DialogManagerOveride.setSize(310, 190);
                    DialogManagerOveride.setUndecorated(true);
                    DialogManagerOveride.setLocationRelativeTo(inventory_mainframe);
                    DialogManagerOveride.setVisible(true);
                    return;
                } else {
                    JOptionPane.showMessageDialog(this, "Warehouse not yet printed.", "D-TECH INFORMATION", JOptionPane.INFORMATION_MESSAGE);
                    return;
                }
            }
            statement.close();
//

            printwarehouse(Warehouse_No);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_but_reprintActionPerformed

    private void but_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_editActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Select a data first to edit.", "D-TECH INFORMATION", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if (jTable1.getSelectedRow() > -1) {
            if (Boolean.parseBoolean(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString())) {
                JOptionPane.showMessageDialog(this, "Unable to Edit selected Warehouse.\n Data has been already posted.", "D-TECH INFORMATION", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            Inventory_warehouseform = new Inventory_WarehouseForm(inventory_mainframe, true, this, jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
            Inventory_warehouseform.setVisible(true);
        }
    }//GEN-LAST:event_but_editActionPerformed

    private void but_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_addActionPerformed
        // TODO add your handling code here:
        Inventory_warehouseform = new Inventory_WarehouseForm(inventory_mainframe, true, this);
        Inventory_warehouseform.setVisible(true);
    }//GEN-LAST:event_but_addActionPerformed

    private void but_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_deleteActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Select a data first to delete.", "D-TECH INFORMATION", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if (jTable1.getSelectedRow() > -1) {
            if (Boolean.parseBoolean(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString())) {
                JOptionPane.showMessageDialog(this, "Unable to Delete selected Warehouse.\n Data has been already posted.", "D-TECH INFORMATION", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            try {

                int x = JOptionPane.showConfirmDialog(this, "Do you really want to delete \nthe selected warehouse data?", "D-TECH CONFIRMATION", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

                if (x == JOptionPane.YES_OPTION) {
                    statement = connection.createStatement();
                    statement.execute("delete from warehouse where `Warehouse_No.` = '" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "'");

                    JOptionPane.showConfirmDialog(this, "Warehouse has been successfully deleted!", "D-TECH INFORMATION", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);
                }

                showQuery("SELECT * FROM warehouselist w");

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_but_deleteActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() > -1 && jTable1.getSelectedColumn() > -1) {
            jTable1.setToolTipText(jTable1.getValueAt(jTable1.getSelectedRow(), jTable1.getSelectedColumn()).toString());
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void field_searchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_searchFocusGained
        // TODO add your handling code here:
        if (field_search.getText().equalsIgnoreCase("Search here. .")) {
            field_search.setText(null);
        }
    }//GEN-LAST:event_field_searchFocusGained

    private void field_searchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_searchFocusLost
        // TODO add your handling code here:
        if (field_search.getText().isEmpty()) {
            field_search.setText("Search here. .");
        }
    }//GEN-LAST:event_field_searchFocusLost

    private void field_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_field_searchKeyReleased
        // TODO add your handling code here:
        showQuery("SELECT * FROM warehouselist w where `Warehouse_No.` like '%" + field_search.getText() + "%' || `Supplier` like '%" + field_search.getText() + "%'");
    }//GEN-LAST:event_field_searchKeyReleased

    private void but_optnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_optnoActionPerformed
        // TODO add your handling code here:
        DialogManagerOveride.dispose();
    }//GEN-LAST:event_but_optnoActionPerformed

    private void but_optnoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_but_optnoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            but_optnoActionPerformed(null);
        }
    }//GEN-LAST:event_but_optnoKeyPressed

    private void but_optyesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_optyesActionPerformed
        // TODO add your handling code here:
        if (field_overidepass.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Either Password is Invalid | Incorrect.", "D-TECH WARNING", JOptionPane.WARNING_MESSAGE);

            field_overidepass.setText(null);
            DialogManagerOveride.dispose();
            return;
        }
        try {
            statement = connection.createStatement();
            System.out.println("SELECT username, AES_DECRYPT(`password`, 9)as 'PASS_DECRYPT', `position` FROM userdetails_list u\n"
                    + "where `position` like '%MANAGER%' OR `position` like '%OFFICER%' OR  `position` like '%SUPERVISOR%'");
            result = statement.executeQuery("SELECT username, AES_DECRYPT(`password`, 9)as 'PASS_DECRYPT', `position` FROM userdetails_list u\n"
                    + "where `position` like '%MANAGER%' OR `position` like '%OFFICER%' OR  `position` like '%SUPERVISOR%'");
            if (result.next()) {
                if (!(field_overidepass.getText().compareTo(result.getString(2)) == 0)) {
                    JOptionPane.showMessageDialog(this, "Either Password is Invalid | Incorrect.", "D-TECH WARNING", JOptionPane.WARNING_MESSAGE);

                    field_overidepass.setText(null);
                    DialogManagerOveride.dispose();
                    return;
                }
//            Record Override Data
                String Warehouse_No = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
//              RMO_No., Ref_No., Transaction, Type, User_ID, Datetime_Created
                statement.executeUpdate("insert into report_manager_overide (`Ref_No.`, Transaction, Type, Amount, User_ID, Datetime_Created)values('"
                        + Warehouse_No + "','REPRINT WAREHOUSE SHEET','RE-PRINT',0.00,'"
                        + inventory_mainframe.userID + "','"
                        + new SimpleDateFormat("yyyy-MM-d HH:mm:ss").format(new Date()) + "')");
                statement.close();
                field_overidepass.setText(null);
                DialogManagerOveride.dispose();
                printwarehouse(Warehouse_No);
            } else {
                JOptionPane.showMessageDialog(this, "Either Password is Invalid | Incorrect.", "D-TECH WARNING", JOptionPane.WARNING_MESSAGE);

                field_overidepass.setText(null);
                DialogManagerOveride.dispose();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_but_optyesActionPerformed

    private void but_optyesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_but_optyesKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            but_optyesActionPerformed(null);
        }
    }//GEN-LAST:event_but_optyesKeyPressed

    private void menuitem_ocloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuitem_ocloseActionPerformed
        // TODO add your handling code here:
        but_optnoActionPerformed(evt);
    }//GEN-LAST:event_menuitem_ocloseActionPerformed

    private void field_overidepassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_field_overidepassActionPerformed
        // TODO add your handling code here:
        but_optyesActionPerformed(evt);
    }//GEN-LAST:event_field_overidepassActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog DialogManagerOveride;
    private javax.swing.JButton but_add;
    private javax.swing.JButton but_delete;
    private javax.swing.JButton but_edit;
    private javax.swing.JButton but_optno;
    private javax.swing.JButton but_optyes;
    private javax.swing.JButton but_post;
    private javax.swing.JButton but_print;
    private javax.swing.JButton but_reprint;
    private javax.swing.JButton but_view;
    private javax.swing.JPasswordField field_overidepass;
    private javax.swing.JTextField field_search;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel label_title;
    private javax.swing.JMenu menu_overide;
    private javax.swing.JMenuItem menuitem_oclose;
    private javax.swing.JPanel panel_overide;
    // End of variables declaration//GEN-END:variables

    private void resettable() {
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "WRH NO.", "SUPPLIER", "TA", "TD", "TV", "NA", "POSTED", "CREATED", "UPDATED"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(150);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(200);
            jTable1.getColumnModel().getColumn(1).setMinWidth(250);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(250);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(300);
            jTable1.getColumnModel().getColumn(2).setMinWidth(70);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(3).setMinWidth(70);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(4).setMinWidth(70);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(5).setMinWidth(70);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(6).setMinWidth(20);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(6).setMaxWidth(50);
            jTable1.getColumnModel().getColumn(7).setMinWidth(150);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(7).setMaxWidth(200);
            jTable1.getColumnModel().getColumn(8).setMinWidth(150);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(8).setMaxWidth(200);
        }

        dtm_warehouse = (DefaultTableModel) jTable1.getModel();
    }

    public void showQuery(String query) {
        resettable();
        try {
            statement = connection.createStatement();
            System.out.println(query);
            result = statement.executeQuery(query);
            while (result.next()) {

//                "WAREHOUSE NO.", "SUPPLIER", "TA", "TD", "TV", "NA", "POSTED", "CREATED", "UPDATED"
//                Warehouse_No., Supplier, Total_Amount, Total_Discount, Total_Vat, Net_Amount, Payment_type, Terms, Datetime_Created, Datetime_Updated, User_ID, postflag
                dtm_warehouse.addRow(new Object[]{result.getString(1),
                    result.getString(2),
                    result.getString(3),
                    result.getString(4),
                    result.getString(5),
                    result.getString(6),
                    result.getBoolean(12),
                    result.getString(9),
                    result.getString(10)});
            }
            statement.close();
            result.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void printwarehouse(String Warehouse_No) throws Exception {
        Reports reports = new Reports(connection, "c8pharmacy_warehouse.jasper");

        reports.getMap().put("warehouse_no", Warehouse_No);
        //report.getMap().put("admission_id", "adm201188-1");
        if (reports.isJRViewer()) {
            JOptionPane.showMessageDialog(null, "There's no data to print.");
            return;
        }

//        reports.print();
//        reports.printpdf();
        inventory_mainframe.jScrollPane1.setViewportView(reports.JRViewer());
//        JDialog d = new JDialog(new javax.swing.JFrame(), true);
//        d.getContentPane().add(reports.JRViewer(), BorderLayout.CENTER);
//        d.setSize(Toolkit.getDefaultToolkit().getScreenSize());
//        d.setVisible(true);
//        d.dispose();
    }
}
